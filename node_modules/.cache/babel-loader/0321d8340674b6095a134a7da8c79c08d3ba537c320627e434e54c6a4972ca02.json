{"ast":null,"code":"var postcss = require('postcss');\nvar parser = require('postcss-selector-parser');\nfunction parse(str, rule) {\n  var nodes;\n  var saver = parser(function (parsed) {\n    nodes = parsed;\n  });\n  try {\n    saver.processSync(str);\n  } catch (e) {\n    if (str.indexOf(':') !== -1) {\n      throw rule ? rule.error('Missed semicolon') : e;\n    } else {\n      throw rule ? rule.error(e.message) : e;\n    }\n  }\n  return nodes.at(0);\n}\nfunction replace(nodes, parent) {\n  var replaced = false;\n  nodes.each(function (i) {\n    if (i.type === 'nesting') {\n      var clonedParent = parent.clone();\n      if (i.value !== '&') {\n        i.replaceWith(parse(i.value.replace('&', clonedParent.toString())));\n      } else {\n        i.replaceWith(clonedParent);\n      }\n      replaced = true;\n    } else if (i.nodes) {\n      if (replace(i, parent)) {\n        replaced = true;\n      }\n    }\n  });\n  return replaced;\n}\nfunction selectors(parent, child) {\n  var result = [];\n  parent.selectors.forEach(function (i) {\n    var parentNode = parse(i, parent);\n    child.selectors.forEach(function (j) {\n      var node = parse(j, child);\n      var replaced = replace(node, parentNode);\n      if (!replaced) {\n        node.prepend(parser.combinator({\n          value: ' '\n        }));\n        node.prepend(parentNode.clone());\n      }\n      result.push(node.toString());\n    });\n  });\n  return result;\n}\nfunction pickComment(comment, after) {\n  if (comment && comment.type === 'comment') {\n    after.after(comment);\n    return comment;\n  } else {\n    return after;\n  }\n}\nfunction atruleChilds(rule, atrule, bubbling) {\n  var children = [];\n  atrule.each(function (child) {\n    if (child.type === 'comment') {\n      children.push(child);\n    } else if (child.type === 'decl') {\n      children.push(child);\n    } else if (child.type === 'rule' && bubbling) {\n      child.selectors = selectors(rule, child);\n    } else if (child.type === 'atrule') {\n      atruleChilds(rule, child, bubbling);\n    }\n  });\n  if (bubbling) {\n    if (children.length) {\n      var clone = rule.clone({\n        nodes: []\n      });\n      for (var i = 0; i < children.length; i++) {\n        clone.append(children[i]);\n      }\n      atrule.prepend(clone);\n    }\n  }\n}\nfunction pickDeclarations(selector, declarations, after) {\n  var parent = postcss.rule({\n    selector: selector,\n    nodes: []\n  });\n  for (var i = 0; i < declarations.length; i++) {\n    parent.append(declarations[i]);\n  }\n  after.after(parent);\n  return parent;\n}\nfunction processRule(rule, bubble, unwrap, preserveEmpty) {\n  var unwrapped = false;\n  var after = rule;\n  var copyDeclarations = false;\n  var declarations = [];\n  rule.each(function (child) {\n    if (child.type === 'rule') {\n      if (declarations.length) {\n        after = pickDeclarations(rule.selector, declarations, after);\n        declarations = [];\n      }\n      copyDeclarations = true;\n      unwrapped = true;\n      child.selectors = selectors(rule, child);\n      after = pickComment(child.prev(), after);\n      after.after(child);\n      after = child;\n    } else if (child.type === 'atrule') {\n      copyDeclarations = false;\n      if (declarations.length) {\n        after = pickDeclarations(rule.selector, declarations, after);\n        declarations = [];\n      }\n      if (child.name === 'at-root') {\n        unwrapped = true;\n        atruleChilds(rule, child, false);\n        var nodes = child.nodes;\n        if (child.params) {\n          nodes = postcss.rule({\n            selector: child.params,\n            nodes: nodes\n          });\n        }\n        after.after(nodes);\n        after = nodes;\n        child.remove();\n      } else if (bubble[child.name]) {\n        unwrapped = true;\n        atruleChilds(rule, child, true);\n        after = pickComment(child.prev(), after);\n        after.after(child);\n        after = child;\n      } else if (unwrap[child.name]) {\n        unwrapped = true;\n        atruleChilds(rule, child, false);\n        after = pickComment(child.prev(), after);\n        after.after(child);\n        after = child;\n      }\n    } else if (child.type === 'decl' && copyDeclarations) {\n      declarations.push(child);\n    }\n  });\n  if (declarations.length) {\n    after = pickDeclarations(rule.selector, declarations, after);\n  }\n  if (unwrapped && preserveEmpty !== true) {\n    rule.raws.semicolon = true;\n    if (rule.nodes.length === 0) rule.remove();\n  }\n}\nfunction atruleNames(defaults, custom) {\n  var list = {};\n  var i, name;\n  for (i = 0; i < defaults.length; i++) {\n    list[defaults[i]] = true;\n  }\n  if (custom) {\n    for (i = 0; i < custom.length; i++) {\n      name = custom[i].replace(/^@/, '');\n      list[name] = true;\n    }\n  }\n  return list;\n}\nmodule.exports = postcss.plugin('postcss-nested', function (opts) {\n  if (!opts) opts = {};\n  var bubble = atruleNames(['media', 'supports'], opts.bubble);\n  var unwrap = atruleNames(['document', 'font-face', 'keyframes'], opts.unwrap);\n  var preserveEmpty = opts ? opts.preserveEmpty : false;\n  var process = function (node) {\n    node.each(function (child) {\n      if (child.type === 'rule') {\n        processRule(child, bubble, unwrap, preserveEmpty);\n      } else if (child.type === 'atrule') {\n        process(child);\n      }\n    });\n  };\n  return process;\n});","map":{"version":3,"names":["postcss","require","parser","parse","str","rule","nodes","saver","parsed","processSync","e","indexOf","error","message","at","replace","parent","replaced","each","i","type","clonedParent","clone","value","replaceWith","toString","selectors","child","result","forEach","parentNode","j","node","prepend","combinator","push","pickComment","comment","after","atruleChilds","atrule","bubbling","children","length","append","pickDeclarations","selector","declarations","processRule","bubble","unwrap","preserveEmpty","unwrapped","copyDeclarations","prev","name","params","remove","raws","semicolon","atruleNames","defaults","custom","list","module","exports","plugin","opts","process"],"sources":["C:/Users/Francisco/Documents/GitHub/examenApi/EXAMEN-API-NOTICIAS/node_modules/postcss-nested/index.js"],"sourcesContent":["var postcss = require('postcss')\nvar parser = require('postcss-selector-parser')\n\nfunction parse (str, rule) {\n  var nodes\n  var saver = parser(function (parsed) {\n    nodes = parsed\n  })\n  try {\n    saver.processSync(str)\n  } catch (e) {\n    if (str.indexOf(':') !== -1) {\n      throw rule ? rule.error('Missed semicolon') : e\n    } else {\n      throw rule ? rule.error(e.message) : e\n    }\n  }\n  return nodes.at(0)\n}\n\nfunction replace (nodes, parent) {\n  var replaced = false\n  nodes.each(function (i) {\n    if (i.type === 'nesting') {\n      var clonedParent = parent.clone()\n      if (i.value !== '&') {\n        i.replaceWith(parse(i.value.replace('&', clonedParent.toString())))\n      } else {\n        i.replaceWith(clonedParent)\n      }\n      replaced = true\n    } else if (i.nodes) {\n      if (replace(i, parent)) {\n        replaced = true\n      }\n    }\n  })\n  return replaced\n}\n\nfunction selectors (parent, child) {\n  var result = []\n  parent.selectors.forEach(function (i) {\n    var parentNode = parse(i, parent)\n\n    child.selectors.forEach(function (j) {\n      var node = parse(j, child)\n      var replaced = replace(node, parentNode)\n      if (!replaced) {\n        node.prepend(parser.combinator({ value: ' ' }))\n        node.prepend(parentNode.clone())\n      }\n      result.push(node.toString())\n    })\n  })\n  return result\n}\n\nfunction pickComment (comment, after) {\n  if (comment && comment.type === 'comment') {\n    after.after(comment)\n    return comment\n  } else {\n    return after\n  }\n}\n\nfunction atruleChilds (rule, atrule, bubbling) {\n  var children = []\n  atrule.each(function (child) {\n    if (child.type === 'comment') {\n      children.push(child)\n    } else if (child.type === 'decl') {\n      children.push(child)\n    } else if (child.type === 'rule' && bubbling) {\n      child.selectors = selectors(rule, child)\n    } else if (child.type === 'atrule') {\n      atruleChilds(rule, child, bubbling)\n    }\n  })\n  if (bubbling) {\n    if (children.length) {\n      var clone = rule.clone({ nodes: [] })\n      for (var i = 0; i < children.length; i++) {\n        clone.append(children[i])\n      }\n      atrule.prepend(clone)\n    }\n  }\n}\n\nfunction pickDeclarations (selector, declarations, after) {\n  var parent = postcss.rule({\n    selector: selector,\n    nodes: []\n  })\n\n  for (var i = 0; i < declarations.length; i++) {\n    parent.append(declarations[i])\n  }\n\n  after.after(parent)\n  return parent\n}\n\nfunction processRule (rule, bubble, unwrap, preserveEmpty) {\n  var unwrapped = false\n  var after = rule\n  var copyDeclarations = false\n  var declarations = []\n\n  rule.each(function (child) {\n    if (child.type === 'rule') {\n      if (declarations.length) {\n        after = pickDeclarations(rule.selector, declarations, after)\n        declarations = []\n      }\n\n      copyDeclarations = true\n      unwrapped = true\n      child.selectors = selectors(rule, child)\n      after = pickComment(child.prev(), after)\n      after.after(child)\n      after = child\n    } else if (child.type === 'atrule') {\n      copyDeclarations = false\n\n      if (declarations.length) {\n        after = pickDeclarations(rule.selector, declarations, after)\n        declarations = []\n      }\n\n      if (child.name === 'at-root') {\n        unwrapped = true\n        atruleChilds(rule, child, false)\n\n        var nodes = child.nodes\n        if (child.params) {\n          nodes = postcss.rule({\n            selector: child.params,\n            nodes: nodes\n          })\n        }\n\n        after.after(nodes)\n        after = nodes\n        child.remove()\n      } else if (bubble[child.name]) {\n        unwrapped = true\n        atruleChilds(rule, child, true)\n        after = pickComment(child.prev(), after)\n        after.after(child)\n        after = child\n      } else if (unwrap[child.name]) {\n        unwrapped = true\n        atruleChilds(rule, child, false)\n        after = pickComment(child.prev(), after)\n        after.after(child)\n        after = child\n      }\n    } else if (child.type === 'decl' && copyDeclarations) {\n      declarations.push(child)\n    }\n  })\n\n  if (declarations.length) {\n    after = pickDeclarations(rule.selector, declarations, after)\n  }\n\n  if (unwrapped && preserveEmpty !== true) {\n    rule.raws.semicolon = true\n    if (rule.nodes.length === 0) rule.remove()\n  }\n}\n\nfunction atruleNames (defaults, custom) {\n  var list = { }\n  var i, name\n  for (i = 0; i < defaults.length; i++) {\n    list[defaults[i]] = true\n  }\n  if (custom) {\n    for (i = 0; i < custom.length; i++) {\n      name = custom[i].replace(/^@/, '')\n      list[name] = true\n    }\n  }\n  return list\n}\n\nmodule.exports = postcss.plugin('postcss-nested', function (opts) {\n  if (!opts) opts = { }\n  var bubble = atruleNames(['media', 'supports'], opts.bubble)\n  var unwrap = atruleNames(['document', 'font-face', 'keyframes'], opts.unwrap)\n  var preserveEmpty = opts ? opts.preserveEmpty : false\n\n  var process = function (node) {\n    node.each(function (child) {\n      if (child.type === 'rule') {\n        processRule(child, bubble, unwrap, preserveEmpty)\n      } else if (child.type === 'atrule') {\n        process(child)\n      }\n    })\n  }\n  return process\n})\n"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIC,MAAM,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAE/C,SAASE,KAAKA,CAAEC,GAAG,EAAEC,IAAI,EAAE;EACzB,IAAIC,KAAK;EACT,IAAIC,KAAK,GAAGL,MAAM,CAAC,UAAUM,MAAM,EAAE;IACnCF,KAAK,GAAGE,MAAM;EAChB,CAAC,CAAC;EACF,IAAI;IACFD,KAAK,CAACE,WAAW,CAACL,GAAG,CAAC;EACxB,CAAC,CAAC,OAAOM,CAAC,EAAE;IACV,IAAIN,GAAG,CAACO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3B,MAAMN,IAAI,GAAGA,IAAI,CAACO,KAAK,CAAC,kBAAkB,CAAC,GAAGF,CAAC;IACjD,CAAC,MAAM;MACL,MAAML,IAAI,GAAGA,IAAI,CAACO,KAAK,CAACF,CAAC,CAACG,OAAO,CAAC,GAAGH,CAAC;IACxC;EACF;EACA,OAAOJ,KAAK,CAACQ,EAAE,CAAC,CAAC,CAAC;AACpB;AAEA,SAASC,OAAOA,CAAET,KAAK,EAAEU,MAAM,EAAE;EAC/B,IAAIC,QAAQ,GAAG,KAAK;EACpBX,KAAK,CAACY,IAAI,CAAC,UAAUC,CAAC,EAAE;IACtB,IAAIA,CAAC,CAACC,IAAI,KAAK,SAAS,EAAE;MACxB,IAAIC,YAAY,GAAGL,MAAM,CAACM,KAAK,CAAC,CAAC;MACjC,IAAIH,CAAC,CAACI,KAAK,KAAK,GAAG,EAAE;QACnBJ,CAAC,CAACK,WAAW,CAACrB,KAAK,CAACgB,CAAC,CAACI,KAAK,CAACR,OAAO,CAAC,GAAG,EAAEM,YAAY,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MACrE,CAAC,MAAM;QACLN,CAAC,CAACK,WAAW,CAACH,YAAY,CAAC;MAC7B;MACAJ,QAAQ,GAAG,IAAI;IACjB,CAAC,MAAM,IAAIE,CAAC,CAACb,KAAK,EAAE;MAClB,IAAIS,OAAO,CAACI,CAAC,EAAEH,MAAM,CAAC,EAAE;QACtBC,QAAQ,GAAG,IAAI;MACjB;IACF;EACF,CAAC,CAAC;EACF,OAAOA,QAAQ;AACjB;AAEA,SAASS,SAASA,CAAEV,MAAM,EAAEW,KAAK,EAAE;EACjC,IAAIC,MAAM,GAAG,EAAE;EACfZ,MAAM,CAACU,SAAS,CAACG,OAAO,CAAC,UAAUV,CAAC,EAAE;IACpC,IAAIW,UAAU,GAAG3B,KAAK,CAACgB,CAAC,EAAEH,MAAM,CAAC;IAEjCW,KAAK,CAACD,SAAS,CAACG,OAAO,CAAC,UAAUE,CAAC,EAAE;MACnC,IAAIC,IAAI,GAAG7B,KAAK,CAAC4B,CAAC,EAAEJ,KAAK,CAAC;MAC1B,IAAIV,QAAQ,GAAGF,OAAO,CAACiB,IAAI,EAAEF,UAAU,CAAC;MACxC,IAAI,CAACb,QAAQ,EAAE;QACbe,IAAI,CAACC,OAAO,CAAC/B,MAAM,CAACgC,UAAU,CAAC;UAAEX,KAAK,EAAE;QAAI,CAAC,CAAC,CAAC;QAC/CS,IAAI,CAACC,OAAO,CAACH,UAAU,CAACR,KAAK,CAAC,CAAC,CAAC;MAClC;MACAM,MAAM,CAACO,IAAI,CAACH,IAAI,CAACP,QAAQ,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAOG,MAAM;AACf;AAEA,SAASQ,WAAWA,CAAEC,OAAO,EAAEC,KAAK,EAAE;EACpC,IAAID,OAAO,IAAIA,OAAO,CAACjB,IAAI,KAAK,SAAS,EAAE;IACzCkB,KAAK,CAACA,KAAK,CAACD,OAAO,CAAC;IACpB,OAAOA,OAAO;EAChB,CAAC,MAAM;IACL,OAAOC,KAAK;EACd;AACF;AAEA,SAASC,YAAYA,CAAElC,IAAI,EAAEmC,MAAM,EAAEC,QAAQ,EAAE;EAC7C,IAAIC,QAAQ,GAAG,EAAE;EACjBF,MAAM,CAACtB,IAAI,CAAC,UAAUS,KAAK,EAAE;IAC3B,IAAIA,KAAK,CAACP,IAAI,KAAK,SAAS,EAAE;MAC5BsB,QAAQ,CAACP,IAAI,CAACR,KAAK,CAAC;IACtB,CAAC,MAAM,IAAIA,KAAK,CAACP,IAAI,KAAK,MAAM,EAAE;MAChCsB,QAAQ,CAACP,IAAI,CAACR,KAAK,CAAC;IACtB,CAAC,MAAM,IAAIA,KAAK,CAACP,IAAI,KAAK,MAAM,IAAIqB,QAAQ,EAAE;MAC5Cd,KAAK,CAACD,SAAS,GAAGA,SAAS,CAACrB,IAAI,EAAEsB,KAAK,CAAC;IAC1C,CAAC,MAAM,IAAIA,KAAK,CAACP,IAAI,KAAK,QAAQ,EAAE;MAClCmB,YAAY,CAAClC,IAAI,EAAEsB,KAAK,EAAEc,QAAQ,CAAC;IACrC;EACF,CAAC,CAAC;EACF,IAAIA,QAAQ,EAAE;IACZ,IAAIC,QAAQ,CAACC,MAAM,EAAE;MACnB,IAAIrB,KAAK,GAAGjB,IAAI,CAACiB,KAAK,CAAC;QAAEhB,KAAK,EAAE;MAAG,CAAC,CAAC;MACrC,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuB,QAAQ,CAACC,MAAM,EAAExB,CAAC,EAAE,EAAE;QACxCG,KAAK,CAACsB,MAAM,CAACF,QAAQ,CAACvB,CAAC,CAAC,CAAC;MAC3B;MACAqB,MAAM,CAACP,OAAO,CAACX,KAAK,CAAC;IACvB;EACF;AACF;AAEA,SAASuB,gBAAgBA,CAAEC,QAAQ,EAAEC,YAAY,EAAET,KAAK,EAAE;EACxD,IAAItB,MAAM,GAAGhB,OAAO,CAACK,IAAI,CAAC;IACxByC,QAAQ,EAAEA,QAAQ;IAClBxC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,YAAY,CAACJ,MAAM,EAAExB,CAAC,EAAE,EAAE;IAC5CH,MAAM,CAAC4B,MAAM,CAACG,YAAY,CAAC5B,CAAC,CAAC,CAAC;EAChC;EAEAmB,KAAK,CAACA,KAAK,CAACtB,MAAM,CAAC;EACnB,OAAOA,MAAM;AACf;AAEA,SAASgC,WAAWA,CAAE3C,IAAI,EAAE4C,MAAM,EAAEC,MAAM,EAAEC,aAAa,EAAE;EACzD,IAAIC,SAAS,GAAG,KAAK;EACrB,IAAId,KAAK,GAAGjC,IAAI;EAChB,IAAIgD,gBAAgB,GAAG,KAAK;EAC5B,IAAIN,YAAY,GAAG,EAAE;EAErB1C,IAAI,CAACa,IAAI,CAAC,UAAUS,KAAK,EAAE;IACzB,IAAIA,KAAK,CAACP,IAAI,KAAK,MAAM,EAAE;MACzB,IAAI2B,YAAY,CAACJ,MAAM,EAAE;QACvBL,KAAK,GAAGO,gBAAgB,CAACxC,IAAI,CAACyC,QAAQ,EAAEC,YAAY,EAAET,KAAK,CAAC;QAC5DS,YAAY,GAAG,EAAE;MACnB;MAEAM,gBAAgB,GAAG,IAAI;MACvBD,SAAS,GAAG,IAAI;MAChBzB,KAAK,CAACD,SAAS,GAAGA,SAAS,CAACrB,IAAI,EAAEsB,KAAK,CAAC;MACxCW,KAAK,GAAGF,WAAW,CAACT,KAAK,CAAC2B,IAAI,CAAC,CAAC,EAAEhB,KAAK,CAAC;MACxCA,KAAK,CAACA,KAAK,CAACX,KAAK,CAAC;MAClBW,KAAK,GAAGX,KAAK;IACf,CAAC,MAAM,IAAIA,KAAK,CAACP,IAAI,KAAK,QAAQ,EAAE;MAClCiC,gBAAgB,GAAG,KAAK;MAExB,IAAIN,YAAY,CAACJ,MAAM,EAAE;QACvBL,KAAK,GAAGO,gBAAgB,CAACxC,IAAI,CAACyC,QAAQ,EAAEC,YAAY,EAAET,KAAK,CAAC;QAC5DS,YAAY,GAAG,EAAE;MACnB;MAEA,IAAIpB,KAAK,CAAC4B,IAAI,KAAK,SAAS,EAAE;QAC5BH,SAAS,GAAG,IAAI;QAChBb,YAAY,CAAClC,IAAI,EAAEsB,KAAK,EAAE,KAAK,CAAC;QAEhC,IAAIrB,KAAK,GAAGqB,KAAK,CAACrB,KAAK;QACvB,IAAIqB,KAAK,CAAC6B,MAAM,EAAE;UAChBlD,KAAK,GAAGN,OAAO,CAACK,IAAI,CAAC;YACnByC,QAAQ,EAAEnB,KAAK,CAAC6B,MAAM;YACtBlD,KAAK,EAAEA;UACT,CAAC,CAAC;QACJ;QAEAgC,KAAK,CAACA,KAAK,CAAChC,KAAK,CAAC;QAClBgC,KAAK,GAAGhC,KAAK;QACbqB,KAAK,CAAC8B,MAAM,CAAC,CAAC;MAChB,CAAC,MAAM,IAAIR,MAAM,CAACtB,KAAK,CAAC4B,IAAI,CAAC,EAAE;QAC7BH,SAAS,GAAG,IAAI;QAChBb,YAAY,CAAClC,IAAI,EAAEsB,KAAK,EAAE,IAAI,CAAC;QAC/BW,KAAK,GAAGF,WAAW,CAACT,KAAK,CAAC2B,IAAI,CAAC,CAAC,EAAEhB,KAAK,CAAC;QACxCA,KAAK,CAACA,KAAK,CAACX,KAAK,CAAC;QAClBW,KAAK,GAAGX,KAAK;MACf,CAAC,MAAM,IAAIuB,MAAM,CAACvB,KAAK,CAAC4B,IAAI,CAAC,EAAE;QAC7BH,SAAS,GAAG,IAAI;QAChBb,YAAY,CAAClC,IAAI,EAAEsB,KAAK,EAAE,KAAK,CAAC;QAChCW,KAAK,GAAGF,WAAW,CAACT,KAAK,CAAC2B,IAAI,CAAC,CAAC,EAAEhB,KAAK,CAAC;QACxCA,KAAK,CAACA,KAAK,CAACX,KAAK,CAAC;QAClBW,KAAK,GAAGX,KAAK;MACf;IACF,CAAC,MAAM,IAAIA,KAAK,CAACP,IAAI,KAAK,MAAM,IAAIiC,gBAAgB,EAAE;MACpDN,YAAY,CAACZ,IAAI,CAACR,KAAK,CAAC;IAC1B;EACF,CAAC,CAAC;EAEF,IAAIoB,YAAY,CAACJ,MAAM,EAAE;IACvBL,KAAK,GAAGO,gBAAgB,CAACxC,IAAI,CAACyC,QAAQ,EAAEC,YAAY,EAAET,KAAK,CAAC;EAC9D;EAEA,IAAIc,SAAS,IAAID,aAAa,KAAK,IAAI,EAAE;IACvC9C,IAAI,CAACqD,IAAI,CAACC,SAAS,GAAG,IAAI;IAC1B,IAAItD,IAAI,CAACC,KAAK,CAACqC,MAAM,KAAK,CAAC,EAAEtC,IAAI,CAACoD,MAAM,CAAC,CAAC;EAC5C;AACF;AAEA,SAASG,WAAWA,CAAEC,QAAQ,EAAEC,MAAM,EAAE;EACtC,IAAIC,IAAI,GAAG,CAAE,CAAC;EACd,IAAI5C,CAAC,EAAEoC,IAAI;EACX,KAAKpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0C,QAAQ,CAAClB,MAAM,EAAExB,CAAC,EAAE,EAAE;IACpC4C,IAAI,CAACF,QAAQ,CAAC1C,CAAC,CAAC,CAAC,GAAG,IAAI;EAC1B;EACA,IAAI2C,MAAM,EAAE;IACV,KAAK3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2C,MAAM,CAACnB,MAAM,EAAExB,CAAC,EAAE,EAAE;MAClCoC,IAAI,GAAGO,MAAM,CAAC3C,CAAC,CAAC,CAACJ,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAClCgD,IAAI,CAACR,IAAI,CAAC,GAAG,IAAI;IACnB;EACF;EACA,OAAOQ,IAAI;AACb;AAEAC,MAAM,CAACC,OAAO,GAAGjE,OAAO,CAACkE,MAAM,CAAC,gBAAgB,EAAE,UAAUC,IAAI,EAAE;EAChE,IAAI,CAACA,IAAI,EAAEA,IAAI,GAAG,CAAE,CAAC;EACrB,IAAIlB,MAAM,GAAGW,WAAW,CAAC,CAAC,OAAO,EAAE,UAAU,CAAC,EAAEO,IAAI,CAAClB,MAAM,CAAC;EAC5D,IAAIC,MAAM,GAAGU,WAAW,CAAC,CAAC,UAAU,EAAE,WAAW,EAAE,WAAW,CAAC,EAAEO,IAAI,CAACjB,MAAM,CAAC;EAC7E,IAAIC,aAAa,GAAGgB,IAAI,GAAGA,IAAI,CAAChB,aAAa,GAAG,KAAK;EAErD,IAAIiB,OAAO,GAAG,SAAAA,CAAUpC,IAAI,EAAE;IAC5BA,IAAI,CAACd,IAAI,CAAC,UAAUS,KAAK,EAAE;MACzB,IAAIA,KAAK,CAACP,IAAI,KAAK,MAAM,EAAE;QACzB4B,WAAW,CAACrB,KAAK,EAAEsB,MAAM,EAAEC,MAAM,EAAEC,aAAa,CAAC;MACnD,CAAC,MAAM,IAAIxB,KAAK,CAACP,IAAI,KAAK,QAAQ,EAAE;QAClCgD,OAAO,CAACzC,KAAK,CAAC;MAChB;IACF,CAAC,CAAC;EACJ,CAAC;EACD,OAAOyC,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}