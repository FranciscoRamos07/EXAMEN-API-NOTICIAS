{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = applyTransformFeatures;\nvar _postcssValueParser = require('postcss-value-parser');\nfunction isHex(node) {\n  if (node.value[0] !== '#') {\n    return false;\n  }\n  var range = node.value.slice(1);\n  return ~[3, 4, 6, 8].indexOf(range.length) && !isNaN(parseInt(range, 16));\n}\nfunction toShorthand(hex) {\n  if (hex.length === 7 && hex[1] === hex[2] && hex[3] === hex[4] && hex[5] === hex[6]) {\n    return '#' + hex[2] + hex[4] + hex[6];\n  }\n  return hex;\n}\nfunction toLonghand(hex) {\n  if (hex.length !== 4) {\n    return hex;\n  }\n  var r = hex[1];\n  var g = hex[2];\n  var b = hex[3];\n  return '#' + r + r + g + g + b + b;\n}\n;\nvar lengths = ['px', 'em', 'rem', 'ex', 'ch', 'vh', 'vw', 'cm', 'mm', 'in', 'pt', 'pc', 'vmin', 'vmax'];\nfunction applyTransformFeatures(node, opts) {\n  if (isHex(node)) {\n    if (opts.colorCase === 'upper') {\n      node.value = node.value.toUpperCase();\n    }\n    if (opts.colorCase === 'lower') {\n      node.value = node.value.toLowerCase();\n    }\n    if (opts.colorShorthand === true) {\n      node.value = toShorthand(node.value);\n    }\n    if (opts.colorShorthand === false) {\n      node.value = toLonghand(node.value);\n    }\n  }\n  var pair = (0, _postcssValueParser.unit)(node.value);\n  if (pair) {\n    if (opts.zeroLengthNoUnit === true && ~lengths.indexOf(pair.unit.toLowerCase()) && Number(pair.number) === 0) {\n      node.value = '0';\n      return;\n    }\n    var parts = pair.number.split('.');\n    var pre = parts[0];\n    var post = parts.slice(1).join('.');\n    if (opts.trimLeadingZero === true && parts[1]) {\n      pre = pre.replace(/^0+/, '');\n    } else if (opts.trimLeadingZero === false && !pre.length) {\n      pre = 0;\n    }\n    if (opts.trimTrailingZeros === true && parts[1]) {\n      var rounded = String(Number(pre + '.' + post)).split('.')[1];\n      post = rounded ? '.' + rounded : '';\n    } else if (opts.trimTrailingZeros === false && parts[1]) {\n      post = '.' + parts[1];\n    }\n    node.value = pre + post + pair.unit;\n  }\n}\nmodule.exports = exports['default'];","map":{"version":3,"names":["exports","__esModule","default","applyTransformFeatures","_postcssValueParser","require","isHex","node","value","range","slice","indexOf","length","isNaN","parseInt","toShorthand","hex","toLonghand","r","g","b","lengths","opts","colorCase","toUpperCase","toLowerCase","colorShorthand","pair","unit","zeroLengthNoUnit","Number","number","parts","split","pre","post","join","trimLeadingZero","replace","trimTrailingZeros","rounded","String","module"],"sources":["C:/Users/Francisco/Documents/GitHub/examenApi/EXAMEN-API-NOTICIAS/node_modules/perfectionist/dist/applyTransformFeatures.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.default = applyTransformFeatures;\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nfunction isHex(node) {\n    if (node.value[0] !== '#') {\n        return false;\n    }\n    var range = node.value.slice(1);\n    return ~[3, 4, 6, 8].indexOf(range.length) && !isNaN(parseInt(range, 16));\n}\n\nfunction toShorthand(hex) {\n    if (hex.length === 7 && hex[1] === hex[2] && hex[3] === hex[4] && hex[5] === hex[6]) {\n        return '#' + hex[2] + hex[4] + hex[6];\n    }\n    return hex;\n}\n\nfunction toLonghand(hex) {\n    if (hex.length !== 4) {\n        return hex;\n    }\n\n    var r = hex[1];\n    var g = hex[2];\n    var b = hex[3];\n    return '#' + r + r + g + g + b + b;\n};\n\nvar lengths = ['px', 'em', 'rem', 'ex', 'ch', 'vh', 'vw', 'cm', 'mm', 'in', 'pt', 'pc', 'vmin', 'vmax'];\n\nfunction applyTransformFeatures(node, opts) {\n    if (isHex(node)) {\n        if (opts.colorCase === 'upper') {\n            node.value = node.value.toUpperCase();\n        }\n        if (opts.colorCase === 'lower') {\n            node.value = node.value.toLowerCase();\n        }\n        if (opts.colorShorthand === true) {\n            node.value = toShorthand(node.value);\n        }\n        if (opts.colorShorthand === false) {\n            node.value = toLonghand(node.value);\n        }\n    }\n    var pair = (0, _postcssValueParser.unit)(node.value);\n    if (pair) {\n        if (opts.zeroLengthNoUnit === true && ~lengths.indexOf(pair.unit.toLowerCase()) && Number(pair.number) === 0) {\n            node.value = '0';\n            return;\n        }\n\n        var parts = pair.number.split('.');\n        var pre = parts[0];\n        var post = parts.slice(1).join('.');\n\n        if (opts.trimLeadingZero === true && parts[1]) {\n            pre = pre.replace(/^0+/, '');\n        } else if (opts.trimLeadingZero === false && !pre.length) {\n            pre = 0;\n        }\n\n        if (opts.trimTrailingZeros === true && parts[1]) {\n            var rounded = String(Number(pre + '.' + post)).split('.')[1];\n            post = rounded ? '.' + rounded : '';\n        } else if (opts.trimTrailingZeros === false && parts[1]) {\n            post = '.' + parts[1];\n        }\n\n        node.value = pre + post + pair.unit;\n    }\n}\nmodule.exports = exports['default'];"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAGC,sBAAsB;AAExC,IAAIC,mBAAmB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAEzD,SAASC,KAAKA,CAACC,IAAI,EAAE;EACjB,IAAIA,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACvB,OAAO,KAAK;EAChB;EACA,IAAIC,KAAK,GAAGF,IAAI,CAACC,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;EAC/B,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,OAAO,CAACF,KAAK,CAACG,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACL,KAAK,EAAE,EAAE,CAAC,CAAC;AAC7E;AAEA,SAASM,WAAWA,CAACC,GAAG,EAAE;EACtB,IAAIA,GAAG,CAACJ,MAAM,KAAK,CAAC,IAAII,GAAG,CAAC,CAAC,CAAC,KAAKA,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAKA,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAKA,GAAG,CAAC,CAAC,CAAC,EAAE;IACjF,OAAO,GAAG,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;EACzC;EACA,OAAOA,GAAG;AACd;AAEA,SAASC,UAAUA,CAACD,GAAG,EAAE;EACrB,IAAIA,GAAG,CAACJ,MAAM,KAAK,CAAC,EAAE;IAClB,OAAOI,GAAG;EACd;EAEA,IAAIE,CAAC,GAAGF,GAAG,CAAC,CAAC,CAAC;EACd,IAAIG,CAAC,GAAGH,GAAG,CAAC,CAAC,CAAC;EACd,IAAII,CAAC,GAAGJ,GAAG,CAAC,CAAC,CAAC;EACd,OAAO,GAAG,GAAGE,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC;AACtC;AAAC;AAED,IAAIC,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC;AAEvG,SAASlB,sBAAsBA,CAACI,IAAI,EAAEe,IAAI,EAAE;EACxC,IAAIhB,KAAK,CAACC,IAAI,CAAC,EAAE;IACb,IAAIe,IAAI,CAACC,SAAS,KAAK,OAAO,EAAE;MAC5BhB,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACgB,WAAW,CAAC,CAAC;IACzC;IACA,IAAIF,IAAI,CAACC,SAAS,KAAK,OAAO,EAAE;MAC5BhB,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACiB,WAAW,CAAC,CAAC;IACzC;IACA,IAAIH,IAAI,CAACI,cAAc,KAAK,IAAI,EAAE;MAC9BnB,IAAI,CAACC,KAAK,GAAGO,WAAW,CAACR,IAAI,CAACC,KAAK,CAAC;IACxC;IACA,IAAIc,IAAI,CAACI,cAAc,KAAK,KAAK,EAAE;MAC/BnB,IAAI,CAACC,KAAK,GAAGS,UAAU,CAACV,IAAI,CAACC,KAAK,CAAC;IACvC;EACJ;EACA,IAAImB,IAAI,GAAG,CAAC,CAAC,EAAEvB,mBAAmB,CAACwB,IAAI,EAAErB,IAAI,CAACC,KAAK,CAAC;EACpD,IAAImB,IAAI,EAAE;IACN,IAAIL,IAAI,CAACO,gBAAgB,KAAK,IAAI,IAAI,CAACR,OAAO,CAACV,OAAO,CAACgB,IAAI,CAACC,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,IAAIK,MAAM,CAACH,IAAI,CAACI,MAAM,CAAC,KAAK,CAAC,EAAE;MAC1GxB,IAAI,CAACC,KAAK,GAAG,GAAG;MAChB;IACJ;IAEA,IAAIwB,KAAK,GAAGL,IAAI,CAACI,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC;IAClC,IAAIC,GAAG,GAAGF,KAAK,CAAC,CAAC,CAAC;IAClB,IAAIG,IAAI,GAAGH,KAAK,CAACtB,KAAK,CAAC,CAAC,CAAC,CAAC0B,IAAI,CAAC,GAAG,CAAC;IAEnC,IAAId,IAAI,CAACe,eAAe,KAAK,IAAI,IAAIL,KAAK,CAAC,CAAC,CAAC,EAAE;MAC3CE,GAAG,GAAGA,GAAG,CAACI,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAChC,CAAC,MAAM,IAAIhB,IAAI,CAACe,eAAe,KAAK,KAAK,IAAI,CAACH,GAAG,CAACtB,MAAM,EAAE;MACtDsB,GAAG,GAAG,CAAC;IACX;IAEA,IAAIZ,IAAI,CAACiB,iBAAiB,KAAK,IAAI,IAAIP,KAAK,CAAC,CAAC,CAAC,EAAE;MAC7C,IAAIQ,OAAO,GAAGC,MAAM,CAACX,MAAM,CAACI,GAAG,GAAG,GAAG,GAAGC,IAAI,CAAC,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC5DE,IAAI,GAAGK,OAAO,GAAG,GAAG,GAAGA,OAAO,GAAG,EAAE;IACvC,CAAC,MAAM,IAAIlB,IAAI,CAACiB,iBAAiB,KAAK,KAAK,IAAIP,KAAK,CAAC,CAAC,CAAC,EAAE;MACrDG,IAAI,GAAG,GAAG,GAAGH,KAAK,CAAC,CAAC,CAAC;IACzB;IAEAzB,IAAI,CAACC,KAAK,GAAG0B,GAAG,GAAGC,IAAI,GAAGR,IAAI,CAACC,IAAI;EACvC;AACJ;AACAc,MAAM,CAAC1C,OAAO,GAAGA,OAAO,CAAC,SAAS,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}