{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = applyCompact;\nvar _commentRegex = require('comment-regex');\nvar _postcssValueParser = require('postcss-value-parser');\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\nvar _applyTransformFeatures = require('./applyTransformFeatures');\nvar _applyTransformFeatures2 = _interopRequireDefault(_applyTransformFeatures);\nvar _blank = require('./blank');\nvar _blank2 = _interopRequireDefault(_blank);\nvar _deeplyNested = require('./deeplyNested');\nvar _deeplyNested2 = _interopRequireDefault(_deeplyNested);\nvar _getIndent = require('./getIndent');\nvar _getIndent2 = _interopRequireDefault(_getIndent);\nvar _isSassVariable = require('./isSassVariable');\nvar _isSassVariable2 = _interopRequireDefault(_isSassVariable);\nvar _maxSelectorLength = require('./maxSelectorLength');\nvar _walk = require('./walk');\nvar _walk2 = _interopRequireDefault(_walk);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction applyCompact(css, opts) {\n  css.walk(function (rule) {\n    if (rule.type === 'decl') {\n      if (rule.raws.value) {\n        rule.value = rule.raws.value.raw.trim();\n      }\n      // Format sass variable `$size: 30em;`\n      if ((0, _isSassVariable2.default)(rule)) {\n        rule.raws.before = '';\n        rule.raws.between = ': ';\n      }\n      var ast = (0, _postcssValueParser2.default)(rule.value);\n      (0, _walk2.default)(ast, function (node, index, parent) {\n        var next = parent.nodes[index + 1];\n        if (node.type === 'div' && node.value === ',') {\n          node.before = '';\n          node.after = ' ';\n        }\n        if (node.type === 'function') {\n          node.before = node.after = ' ';\n        }\n        if (node.type === 'space') {\n          node.value = ' ';\n        }\n        if (node.type === 'word' && node.value === '!' && parent.nodes[index + 2] && next.type === 'space' && parent.nodes[index + 2].type === 'word') {\n          next.type = 'word';\n          next.value = '';\n        }\n        if (node.type === 'word') {\n          (0, _applyTransformFeatures2.default)(node, opts);\n        }\n      });\n      rule.value = ast.toString();\n\n      // Format `!important`\n      if (rule.important) {\n        rule.raws.important = ' !important';\n      }\n      if (rule.raws.value) {\n        rule.raws.value.raw = rule.value;\n      }\n    }\n    opts.indentSize = 1;\n    if (rule.type === 'comment') {\n      if (rule.raws.inline) {\n        rule.raws.inline = null;\n      }\n      var prev = rule.prev();\n      if (prev && prev.type === 'decl') {\n        rule.raws.before = ' ' + (0, _blank2.default)(rule.raws.before);\n      }\n      if (rule.parent && rule.parent.type === 'root') {\n        var next = rule.next();\n        if (next) {\n          next.raws.before = '\\n';\n        }\n        if (rule !== css.first) {\n          rule.raws.before = '\\n';\n        }\n      }\n      return;\n    }\n    var indent = (0, _getIndent2.default)(rule, opts.indentChar, opts.indentSize);\n    var deep = (0, _deeplyNested2.default)(rule);\n    if (rule.type === 'rule' || rule.type === 'atrule') {\n      if (!rule.nodes) {\n        rule.raws.between = '';\n      } else {\n        rule.raws.between = ' ';\n      }\n      rule.raws.after = ' ';\n      rule.raws.before = indent + (0, _blank2.default)(rule.raws.before);\n      rule.raws.semicolon = true;\n    }\n    if (rule.raws.selector && rule.raws.selector.raw) {\n      rule.selector = rule.raws.selector.raw;\n    }\n    (0, _maxSelectorLength.maxSelectorLength)(rule, opts);\n    if (rule.type === 'decl') {\n      if ((0, _deeplyNested2.default)(rule.parent)) {\n        var newline = rule === css.first ? '' : '\\n';\n        rule.raws.before = newline + indent + (0, _blank2.default)(rule.raws.before);\n      } else {\n        rule.raws.before = ' ' + (0, _blank2.default)(rule.raws.before);\n      }\n      if (!(0, _commentRegex.block)().test(rule.raws.between)) {\n        rule.raws.between = ': ';\n      }\n    }\n    if ((deep || rule.nodes) && rule !== css.first) {\n      rule.raws.before = '\\n ';\n    }\n    if (deep) {\n      rule.raws.after = '\\n' + indent;\n    }\n    if (rule.parent && rule !== rule.parent.first && (rule.type === 'rule' || rule.type === 'atrule')) {\n      rule.raws.before = '\\n' + indent;\n    }\n  });\n  css.raws.after = '\\n';\n}\nmodule.exports = exports['default'];","map":{"version":3,"names":["exports","__esModule","default","applyCompact","_commentRegex","require","_postcssValueParser","_postcssValueParser2","_interopRequireDefault","_applyTransformFeatures","_applyTransformFeatures2","_blank","_blank2","_deeplyNested","_deeplyNested2","_getIndent","_getIndent2","_isSassVariable","_isSassVariable2","_maxSelectorLength","_walk","_walk2","obj","css","opts","walk","rule","type","raws","value","raw","trim","before","between","ast","node","index","parent","next","nodes","after","toString","important","indentSize","inline","prev","first","indent","indentChar","deep","semicolon","selector","maxSelectorLength","newline","block","test","module"],"sources":["C:/Users/Francisco/Documents/GitHub/examenApi/EXAMEN-API-NOTICIAS/node_modules/perfectionist/dist/applyCompact.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.default = applyCompact;\n\nvar _commentRegex = require('comment-regex');\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nvar _applyTransformFeatures = require('./applyTransformFeatures');\n\nvar _applyTransformFeatures2 = _interopRequireDefault(_applyTransformFeatures);\n\nvar _blank = require('./blank');\n\nvar _blank2 = _interopRequireDefault(_blank);\n\nvar _deeplyNested = require('./deeplyNested');\n\nvar _deeplyNested2 = _interopRequireDefault(_deeplyNested);\n\nvar _getIndent = require('./getIndent');\n\nvar _getIndent2 = _interopRequireDefault(_getIndent);\n\nvar _isSassVariable = require('./isSassVariable');\n\nvar _isSassVariable2 = _interopRequireDefault(_isSassVariable);\n\nvar _maxSelectorLength = require('./maxSelectorLength');\n\nvar _walk = require('./walk');\n\nvar _walk2 = _interopRequireDefault(_walk);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction applyCompact(css, opts) {\n    css.walk(function (rule) {\n        if (rule.type === 'decl') {\n            if (rule.raws.value) {\n                rule.value = rule.raws.value.raw.trim();\n            }\n            // Format sass variable `$size: 30em;`\n            if ((0, _isSassVariable2.default)(rule)) {\n                rule.raws.before = '';\n                rule.raws.between = ': ';\n            }\n\n            var ast = (0, _postcssValueParser2.default)(rule.value);\n\n            (0, _walk2.default)(ast, function (node, index, parent) {\n                var next = parent.nodes[index + 1];\n                if (node.type === 'div' && node.value === ',') {\n                    node.before = '';\n                    node.after = ' ';\n                }\n                if (node.type === 'function') {\n                    node.before = node.after = ' ';\n                }\n                if (node.type === 'space') {\n                    node.value = ' ';\n                }\n                if (node.type === 'word' && node.value === '!' && parent.nodes[index + 2] && next.type === 'space' && parent.nodes[index + 2].type === 'word') {\n                    next.type = 'word';\n                    next.value = '';\n                }\n                if (node.type === 'word') {\n                    (0, _applyTransformFeatures2.default)(node, opts);\n                }\n            });\n\n            rule.value = ast.toString();\n\n            // Format `!important`\n            if (rule.important) {\n                rule.raws.important = ' !important';\n            }\n\n            if (rule.raws.value) {\n                rule.raws.value.raw = rule.value;\n            }\n        }\n        opts.indentSize = 1;\n        if (rule.type === 'comment') {\n            if (rule.raws.inline) {\n                rule.raws.inline = null;\n            }\n            var prev = rule.prev();\n            if (prev && prev.type === 'decl') {\n                rule.raws.before = ' ' + (0, _blank2.default)(rule.raws.before);\n            }\n            if (rule.parent && rule.parent.type === 'root') {\n                var next = rule.next();\n                if (next) {\n                    next.raws.before = '\\n';\n                }\n                if (rule !== css.first) {\n                    rule.raws.before = '\\n';\n                }\n            }\n            return;\n        }\n        var indent = (0, _getIndent2.default)(rule, opts.indentChar, opts.indentSize);\n        var deep = (0, _deeplyNested2.default)(rule);\n        if (rule.type === 'rule' || rule.type === 'atrule') {\n            if (!rule.nodes) {\n                rule.raws.between = '';\n            } else {\n                rule.raws.between = ' ';\n            }\n            rule.raws.after = ' ';\n            rule.raws.before = indent + (0, _blank2.default)(rule.raws.before);\n            rule.raws.semicolon = true;\n        }\n        if (rule.raws.selector && rule.raws.selector.raw) {\n            rule.selector = rule.raws.selector.raw;\n        }\n        (0, _maxSelectorLength.maxSelectorLength)(rule, opts);\n        if (rule.type === 'decl') {\n            if ((0, _deeplyNested2.default)(rule.parent)) {\n                var newline = rule === css.first ? '' : '\\n';\n                rule.raws.before = newline + indent + (0, _blank2.default)(rule.raws.before);\n            } else {\n                rule.raws.before = ' ' + (0, _blank2.default)(rule.raws.before);\n            }\n            if (!(0, _commentRegex.block)().test(rule.raws.between)) {\n                rule.raws.between = ': ';\n            }\n        }\n        if ((deep || rule.nodes) && rule !== css.first) {\n            rule.raws.before = '\\n ';\n        }\n        if (deep) {\n            rule.raws.after = '\\n' + indent;\n        }\n        if (rule.parent && rule !== rule.parent.first && (rule.type === 'rule' || rule.type === 'atrule')) {\n            rule.raws.before = '\\n' + indent;\n        }\n    });\n    css.raws.after = '\\n';\n}\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}