{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nexports.maxAtRuleLength = maxAtRuleLength;\nexports.maxSelectorLength = maxSelectorLength;\nexports.maxValueLength = maxValueLength;\nvar _postcss = require('postcss');\nvar _space = require('./space');\nvar _space2 = _interopRequireDefault(_space);\nvar _getIndent = require('./getIndent');\nvar _getIndent2 = _interopRequireDefault(_getIndent);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction splitProperty(rule, prop, opts) {\n  var _reindent$opts = _extends({\n      reindent: false\n    }, opts),\n    breakEvery = _reindent$opts.breakEvery,\n    reindent = _reindent$opts.reindent,\n    reduce = _reindent$opts.reduce,\n    max = _reindent$opts.max;\n  var property = rule[prop];\n  if (!max || !property) {\n    return;\n  }\n  var exploded = _postcss.list.comma(property);\n  if (property.length > max || reduce) {\n    (function () {\n      var indent = 0;\n      if (typeof reindent === 'function') {\n        indent = reindent(rule);\n      }\n      rule[prop] = exploded.reduce(function (lines, chunk) {\n        if (breakEvery) {\n          lines.push(chunk);\n          return lines;\n        }\n        if (lines[lines.length - 1].length + indent <= max) {\n          var merged = lines[lines.length - 1] + ', ' + chunk;\n          if (indent + merged.length <= max) {\n            lines[lines.length - 1] = merged;\n            return lines;\n          }\n        }\n        lines.push(chunk);\n        return lines;\n      }, [exploded.shift()]).join(',\\n' + (0, _space2.default)(indent));\n    })();\n  }\n}\nfunction maxAtRuleLength(rule, _ref) {\n  var max = _ref.maxAtRuleLength;\n  return splitProperty(rule, 'params', {\n    max: max,\n    breakEvery: true,\n    reindent: function reindent(r) {\n      return r.name.length + 2;\n    }\n  });\n}\nfunction maxSelectorLength(rule, opts) {\n  return splitProperty(rule, 'selector', {\n    max: opts.maxSelectorLength,\n    reduce: true,\n    // where possible reduce to one line\n    reindent: function reindent(r) {\n      return (0, _getIndent2.default)(r, opts.indentChar, opts.indentSize).length;\n    }\n  });\n}\nfunction maxValueLength(rule, _ref2) {\n  var max = _ref2.maxValueLength;\n  if (rule.raws.value && rule.raws.value.raw) {\n    rule.value = rule.raws.value.raw;\n  }\n  return splitProperty(rule, 'value', {\n    max: max,\n    breakEvery: true,\n    reindent: function reindent(r) {\n      return (0, _getIndent2.default)(r).length + r.prop.length + 2;\n    }\n  });\n}","map":{"version":3,"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","maxAtRuleLength","maxSelectorLength","maxValueLength","_postcss","require","_space","_space2","_interopRequireDefault","_getIndent","_getIndent2","obj","default","splitProperty","rule","prop","opts","_reindent$opts","reindent","breakEvery","reduce","max","property","exploded","list","comma","indent","lines","chunk","push","merged","shift","join","_ref","r","name","indentChar","indentSize","_ref2","raws","value","raw"],"sources":["C:/Users/Francisco/Documents/GitHub/examenApi/EXAMEN-API-NOTICIAS/node_modules/perfectionist/dist/maxSelectorLength.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.maxAtRuleLength = maxAtRuleLength;\nexports.maxSelectorLength = maxSelectorLength;\nexports.maxValueLength = maxValueLength;\n\nvar _postcss = require('postcss');\n\nvar _space = require('./space');\n\nvar _space2 = _interopRequireDefault(_space);\n\nvar _getIndent = require('./getIndent');\n\nvar _getIndent2 = _interopRequireDefault(_getIndent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction splitProperty(rule, prop, opts) {\n    var _reindent$opts = _extends({\n        reindent: false\n    }, opts),\n        breakEvery = _reindent$opts.breakEvery,\n        reindent = _reindent$opts.reindent,\n        reduce = _reindent$opts.reduce,\n        max = _reindent$opts.max;\n\n    var property = rule[prop];\n    if (!max || !property) {\n        return;\n    }\n    var exploded = _postcss.list.comma(property);\n    if (property.length > max || reduce) {\n        (function () {\n            var indent = 0;\n            if (typeof reindent === 'function') {\n                indent = reindent(rule);\n            }\n            rule[prop] = exploded.reduce(function (lines, chunk) {\n                if (breakEvery) {\n                    lines.push(chunk);\n                    return lines;\n                }\n                if (lines[lines.length - 1].length + indent <= max) {\n                    var merged = lines[lines.length - 1] + ', ' + chunk;\n                    if (indent + merged.length <= max) {\n                        lines[lines.length - 1] = merged;\n                        return lines;\n                    }\n                }\n                lines.push(chunk);\n                return lines;\n            }, [exploded.shift()]).join(',\\n' + (0, _space2.default)(indent));\n        })();\n    }\n}\n\nfunction maxAtRuleLength(rule, _ref) {\n    var max = _ref.maxAtRuleLength;\n\n    return splitProperty(rule, 'params', {\n        max: max,\n        breakEvery: true,\n        reindent: function reindent(r) {\n            return r.name.length + 2;\n        }\n    });\n}\n\nfunction maxSelectorLength(rule, opts) {\n    return splitProperty(rule, 'selector', {\n        max: opts.maxSelectorLength,\n        reduce: true, // where possible reduce to one line\n        reindent: function reindent(r) {\n            return (0, _getIndent2.default)(r, opts.indentChar, opts.indentSize).length;\n        }\n    });\n}\n\nfunction maxValueLength(rule, _ref2) {\n    var max = _ref2.maxValueLength;\n\n    if (rule.raws.value && rule.raws.value.raw) {\n        rule.value = rule.raws.value.raw;\n    }\n    return splitProperty(rule, 'value', {\n        max: max,\n        breakEvery: true,\n        reindent: function reindent(r) {\n            return (0, _getIndent2.default)(r).length + r.prop.length + 2;\n        }\n    });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}