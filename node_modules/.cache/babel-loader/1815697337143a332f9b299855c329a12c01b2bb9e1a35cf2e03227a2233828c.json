{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = unesc;\n// Many thanks for this post which made this migration much easier.\n// https://mathiasbynens.be/notes/css-escapes\n\n/**\r\n * \r\n * @param {string} str \r\n * @returns {[string, number]|undefined}\r\n */\nfunction gobbleHex(str) {\n  var lower = str.toLowerCase();\n  var hex = '';\n  var spaceTerminated = false;\n  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\n    var code = lower.charCodeAt(i);\n    // check to see if we are dealing with a valid hex char [a-f|0-9]\n    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57;\n    // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n    spaceTerminated = code === 32;\n    if (!valid) {\n      break;\n    }\n    hex += lower[i];\n  }\n  if (hex.length === 0) {\n    return undefined;\n  }\n  var codePoint = parseInt(hex, 16);\n  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF;\n  // Add special case for\n  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\n  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\n  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\n  }\n  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\n}\nvar CONTAINS_ESCAPE = /\\\\/;\nfunction unesc(str) {\n  var needToProcess = CONTAINS_ESCAPE.test(str);\n  if (!needToProcess) {\n    return str;\n  }\n  var ret = \"\";\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === \"\\\\\") {\n      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\n      if (gobbled !== undefined) {\n        ret += gobbled[0];\n        i += gobbled[1];\n        continue;\n      }\n\n      // Retain a pair of \\\\ if double escaped `\\\\\\\\`\n      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\n      if (str[i + 1] === \"\\\\\") {\n        ret += \"\\\\\";\n        i++;\n        continue;\n      }\n\n      // if \\\\ is at the end of the string retain it\n      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\n      if (str.length === i + 1) {\n        ret += str[i];\n      }\n      continue;\n    }\n    ret += str[i];\n  }\n  return ret;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["exports","__esModule","unesc","gobbleHex","str","lower","toLowerCase","hex","spaceTerminated","i","undefined","code","charCodeAt","valid","length","codePoint","parseInt","isSurrogate","String","fromCodePoint","CONTAINS_ESCAPE","needToProcess","test","ret","gobbled","slice","module","default"],"sources":["C:/Users/Francisco/Documents/GitHub/examenApi/EXAMEN-API-NOTICIAS/node_modules/postcss-selector-parser/dist/util/unesc.js"],"sourcesContent":["\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports[\"default\"] = unesc;\r\n// Many thanks for this post which made this migration much easier.\r\n// https://mathiasbynens.be/notes/css-escapes\r\n\r\n/**\r\n * \r\n * @param {string} str \r\n * @returns {[string, number]|undefined}\r\n */\r\nfunction gobbleHex(str) {\r\n  var lower = str.toLowerCase();\r\n  var hex = '';\r\n  var spaceTerminated = false;\r\n  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\r\n    var code = lower.charCodeAt(i);\r\n    // check to see if we are dealing with a valid hex char [a-f|0-9]\r\n    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57;\r\n    // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\r\n    spaceTerminated = code === 32;\r\n    if (!valid) {\r\n      break;\r\n    }\r\n    hex += lower[i];\r\n  }\r\n  if (hex.length === 0) {\r\n    return undefined;\r\n  }\r\n  var codePoint = parseInt(hex, 16);\r\n  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF;\r\n  // Add special case for\r\n  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\r\n  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\r\n  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\r\n    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\r\n  }\r\n  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\r\n}\r\nvar CONTAINS_ESCAPE = /\\\\/;\r\nfunction unesc(str) {\r\n  var needToProcess = CONTAINS_ESCAPE.test(str);\r\n  if (!needToProcess) {\r\n    return str;\r\n  }\r\n  var ret = \"\";\r\n  for (var i = 0; i < str.length; i++) {\r\n    if (str[i] === \"\\\\\") {\r\n      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\r\n      if (gobbled !== undefined) {\r\n        ret += gobbled[0];\r\n        i += gobbled[1];\r\n        continue;\r\n      }\r\n\r\n      // Retain a pair of \\\\ if double escaped `\\\\\\\\`\r\n      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\r\n      if (str[i + 1] === \"\\\\\") {\r\n        ret += \"\\\\\";\r\n        i++;\r\n        continue;\r\n      }\r\n\r\n      // if \\\\ is at the end of the string retain it\r\n      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\r\n      if (str.length === i + 1) {\r\n        ret += str[i];\r\n      }\r\n      continue;\r\n    }\r\n    ret += str[i];\r\n  }\r\n  return ret;\r\n}\r\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}