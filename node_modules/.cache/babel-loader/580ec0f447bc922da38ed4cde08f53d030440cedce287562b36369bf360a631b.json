{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _chalk = require('chalk');\nvar _chalk2 = _interopRequireDefault(_chalk);\nvar _tokenize = require('./tokenize');\nvar _tokenize2 = _interopRequireDefault(_tokenize);\nvar _input = require('./input');\nvar _input2 = _interopRequireDefault(_input);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar colors = new _chalk2.default.constructor({\n  enabled: true\n});\nvar HIGHLIGHT_THEME = {\n  'brackets': colors.cyan,\n  'at-word': colors.cyan,\n  'call': colors.cyan,\n  'comment': colors.gray,\n  'string': colors.green,\n  'class': colors.yellow,\n  'hash': colors.magenta,\n  '(': colors.cyan,\n  ')': colors.cyan,\n  '{': colors.yellow,\n  '}': colors.yellow,\n  '[': colors.yellow,\n  ']': colors.yellow,\n  ':': colors.yellow,\n  ';': colors.yellow\n};\nfunction getTokenType(_ref, index, tokens) {\n  var type = _ref[0],\n    value = _ref[1];\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class';\n    }\n    if (value[0] === '#') {\n      return 'hash';\n    }\n  }\n  var nextToken = tokens[index + 1];\n  if (nextToken && (nextToken[0] === 'brackets' || nextToken[0] === '(')) {\n    return 'call';\n  }\n  return type;\n}\nfunction terminalHighlight(css) {\n  var tokens = (0, _tokenize2.default)(new _input2.default(css), {\n    ignoreErrors: true\n  });\n  return tokens.map(function (token, index) {\n    var color = HIGHLIGHT_THEME[getTokenType(token, index, tokens)];\n    if (color) {\n      return token[1].split(/\\r?\\n/).map(function (i) {\n        return color(i);\n      }).join('\\n');\n    } else {\n      return token[1];\n    }\n  }).join('');\n}\nexports.default = terminalHighlight;\nmodule.exports = exports['default'];","map":{"version":3,"names":["_chalk","require","_tokenize","_input","colors","_chalk2","default","constructor","enabled","HIGHLIGHT_THEME","cyan","gray","green","yellow","magenta","getTokenType","_ref","index","tokens","type","value","nextToken","terminalHighlight","css","_tokenize2","_input2","ignoreErrors","map","token","color","split","i","join"],"sources":["C:\\Users\\Francisco\\Documents\\GitHub\\examenApi\\EXAMEN-API-NOTICIAS\\node_modules\\postcss-scss\\node_modules\\postcss\\lib\\terminal-highlight.es6"],"sourcesContent":["import chalk from 'chalk';\n\nimport tokenize from './tokenize';\nimport Input    from './input';\n\nlet colors = new chalk.constructor({ enabled: true });\n\nconst HIGHLIGHT_THEME = {\n    'brackets': colors.cyan,\n    'at-word':  colors.cyan,\n    'call':     colors.cyan,\n    'comment':  colors.gray,\n    'string':   colors.green,\n    'class':    colors.yellow,\n    'hash':     colors.magenta,\n    '(':        colors.cyan,\n    ')':        colors.cyan,\n    '{':        colors.yellow,\n    '}':        colors.yellow,\n    '[':        colors.yellow,\n    ']':        colors.yellow,\n    ':':        colors.yellow,\n    ';':        colors.yellow\n};\n\nfunction getTokenType([type, value], index, tokens) {\n    if (type === 'word') {\n        if (value[0] === '.') {\n            return 'class';\n        }\n        if (value[0] === '#') {\n            return 'hash';\n        }\n    }\n\n    let nextToken = tokens[index + 1];\n    if (nextToken && (nextToken[0] === 'brackets' || nextToken[0] === '(')) {\n        return 'call';\n    }\n\n    return type;\n}\n\nfunction terminalHighlight(css) {\n    let tokens = tokenize(new Input(css), { ignoreErrors: true });\n    return tokens.map((token, index) => {\n        let color = HIGHLIGHT_THEME[getTokenType(token, index, tokens)];\n        if ( color ) {\n            return token[1].split(/\\r?\\n/)\n              .map( i => color(i) )\n              .join('\\n');\n        } else {\n            return token[1];\n        }\n    }).join('');\n}\n\nexport default terminalHighlight;\n"],"mappings":";;;AAAA,IAAAA,MAAA,GAAAC,OAAA;;AAEA,IAAAC,SAAA,GAAAD,OAAA;;AACA,IAAAE,MAAA,GAAAF,OAAA;;;;;;;AAEA,IAAIG,MAAA,GAAS,IAAIC,OAAA,CAAAC,OAAA,CAAMC,WAAV,CAAsB;EAAEC,OAAA,EAAS;AAAX,CAAtB,CAAb;AAEA,IAAMC,eAAA,GAAkB;EACpB,YAAYL,MAAA,CAAOM,IADC;EAEpB,WAAYN,MAAA,CAAOM,IAFC;EAGpB,QAAYN,MAAA,CAAOM,IAHC;EAIpB,WAAYN,MAAA,CAAOO,IAJC;EAKpB,UAAYP,MAAA,CAAOQ,KALC;EAMpB,SAAYR,MAAA,CAAOS,MANC;EAOpB,QAAYT,MAAA,CAAOU,OAPC;EAQpB,KAAYV,MAAA,CAAOM,IARC;EASpB,KAAYN,MAAA,CAAOM,IATC;EAUpB,KAAYN,MAAA,CAAOS,MAVC;EAWpB,KAAYT,MAAA,CAAOS,MAXC;EAYpB,KAAYT,MAAA,CAAOS,MAZC;EAapB,KAAYT,MAAA,CAAOS,MAbC;EAcpB,KAAYT,MAAA,CAAOS,MAdC;EAepB,KAAYT,MAAA,CAAOS;AAfC,CAAxB;AAkBA,SAASE,YAATA,CAAAC,IAAA,EAAqCC,KAArC,EAA4CC,MAA5C,EAAoD;EAAA,IAA7BC,IAA6B,GAAAH,IAAA;IAAvBI,KAAuB,GAAAJ,IAAA;EAChD,IAAIG,IAAA,KAAS,MAAb,EAAqB;IACjB,IAAIC,KAAA,CAAM,CAAN,MAAa,GAAjB,EAAsB;MAClB,OAAO,OAAP;IACH;IACD,IAAIA,KAAA,CAAM,CAAN,MAAa,GAAjB,EAAsB;MAClB,OAAO,MAAP;IACH;EACJ;EAED,IAAIC,SAAA,GAAYH,MAAA,CAAOD,KAAA,GAAQ,CAAf,CAAhB;EACA,IAAII,SAAA,KAAcA,SAAA,CAAU,CAAV,MAAiB,UAAjB,IAA+BA,SAAA,CAAU,CAAV,MAAiB,GAA9D,CAAJ,EAAwE;IACpE,OAAO,MAAP;EACH;EAED,OAAOF,IAAP;AACH;AAED,SAASG,iBAATA,CAA2BC,GAA3B,EAAgC;EAC5B,IAAIL,MAAA,GAAS,IAAAM,UAAA,CAAAlB,OAAA,EAAS,IAAAmB,OAAA,CAAAnB,OAAA,CAAUiB,GAAV,CAAT,EAAyB;IAAEG,YAAA,EAAc;EAAhB,CAAzB,CAAb;EACA,OAAOR,MAAA,CAAOS,GAAP,CAAW,UAACC,KAAD,EAAQX,KAAR,EAAkB;IAChC,IAAIY,KAAA,GAAQpB,eAAA,CAAgBM,YAAA,CAAaa,KAAb,EAAoBX,KAApB,EAA2BC,MAA3B,CAAhB,CAAZ;IACA,IAAKW,KAAL,EAAa;MACT,OAAOD,KAAA,CAAM,CAAN,EAASE,KAAT,CAAe,OAAf,EACJH,GADI,CACC,UAAAI,CAAA;QAAA,OAAKF,KAAA,CAAME,CAAN,CAAL;MAAA,CADD,EAEJC,IAFI,CAEC,IAFD,CAAP;IAGH,CAJD,MAIO;MACH,OAAOJ,KAAA,CAAM,CAAN,CAAP;IACH;EACJ,CATM,EASJI,IATI,CASC,EATD,CAAP;AAUH;kBAEcV,iB"},"metadata":{},"sourceType":"script","externalDependencies":[]}