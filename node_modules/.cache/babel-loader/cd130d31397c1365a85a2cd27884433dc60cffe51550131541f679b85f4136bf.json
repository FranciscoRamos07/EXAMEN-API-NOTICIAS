{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _container = require('postcss/lib/container');\nvar _container2 = _interopRequireDefault(_container);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar NestedDeclaration = function (_Container) {\n  _inherits(NestedDeclaration, _Container);\n  function NestedDeclaration(defaults) {\n    _classCallCheck(this, NestedDeclaration);\n    var _this = _possibleConstructorReturn(this, _Container.call(this, defaults));\n    _this.type = 'decl';\n    _this.isNested = true;\n    if (!_this.nodes) _this.nodes = [];\n    return _this;\n  }\n  return NestedDeclaration;\n}(_container2.default);\nexports.default = NestedDeclaration;\nmodule.exports = exports['default'];","map":{"version":3,"names":["_container","require","NestedDeclaration","defaults","_classCallCheck","_this","_possibleConstructorReturn","_Container","call","type","isNested","nodes"],"sources":["\\source\\nested-declaration.es6"],"sourcesContent":["import Container from 'postcss/lib/container';\n\nclass NestedDeclaration extends Container {\n\n    constructor(defaults) {\n        super(defaults);\n        this.type     = 'decl';\n        this.isNested = true;\n        if ( !this.nodes ) this.nodes = [];\n    }\n\n}\n\nexport default NestedDeclaration;\n"],"mappings":";;;AAAA,IAAAA,UAAA,GAAAC,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMC,iB;;EAEF,SAAAA,kBAAYC,QAAZ,EAAsB;IAAAC,eAAA,OAAAF,iBAAA;IAAA,IAAAG,KAAA,GAAAC,0BAAA,OAClBC,UAAA,CAAAC,IAAA,OAAML,QAAN,CADkB;IAElBE,KAAA,CAAKI,IAAL,GAAgB,MAAhB;IACAJ,KAAA,CAAKK,QAAL,GAAgB,IAAhB;IACA,IAAK,CAACL,KAAA,CAAKM,KAAX,EAAmBN,KAAA,CAAKM,KAAL,GAAa,EAAb;IAJD,OAAAN,KAAA;EAKrB;;;kBAIUH,iB"},"metadata":{},"sourceType":"script","externalDependencies":[]}