{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _chalk = require('chalk');\nvar _chalk2 = _interopRequireDefault(_chalk);\nvar _tokenize = require('./tokenize');\nvar _tokenize2 = _interopRequireDefault(_tokenize);\nvar _input = require('./input');\nvar _input2 = _interopRequireDefault(_input);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar HIGHLIGHT_THEME = {\n  'brackets': _chalk2.default.cyan,\n  'at-word': _chalk2.default.cyan,\n  'call': _chalk2.default.cyan,\n  'comment': _chalk2.default.gray,\n  'string': _chalk2.default.green,\n  'class': _chalk2.default.yellow,\n  'hash': _chalk2.default.magenta,\n  '(': _chalk2.default.cyan,\n  ')': _chalk2.default.cyan,\n  '{': _chalk2.default.yellow,\n  '}': _chalk2.default.yellow,\n  '[': _chalk2.default.yellow,\n  ']': _chalk2.default.yellow,\n  ':': _chalk2.default.yellow,\n  ';': _chalk2.default.yellow\n};\nfunction getTokenType(_ref, processor) {\n  var type = _ref[0],\n    value = _ref[1];\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class';\n    }\n    if (value[0] === '#') {\n      return 'hash';\n    }\n  }\n  if (!processor.endOfFile()) {\n    var next = processor.nextToken();\n    processor.back(next);\n    if (next[0] === 'brackets' || next[0] === '(') return 'call';\n  }\n  return type;\n}\nfunction terminalHighlight(css) {\n  var processor = (0, _tokenize2.default)(new _input2.default(css), {\n    ignoreErrors: true\n  });\n  var result = '';\n  var _loop = function _loop() {\n    var token = processor.nextToken();\n    var color = HIGHLIGHT_THEME[getTokenType(token, processor)];\n    if (color) {\n      result += token[1].split(/\\r?\\n/).map(function (i) {\n        return color(i);\n      }).join('\\n');\n    } else {\n      result += token[1];\n    }\n  };\n  while (!processor.endOfFile()) {\n    _loop();\n  }\n  return result;\n}\nexports.default = terminalHighlight;\nmodule.exports = exports['default'];","map":{"version":3,"names":["_chalk","require","_tokenize","_input","HIGHLIGHT_THEME","_chalk2","default","cyan","gray","green","yellow","magenta","getTokenType","_ref","processor","type","value","endOfFile","next","nextToken","back","terminalHighlight","css","_tokenize2","_input2","ignoreErrors","result","_loop","token","color","split","map","i","join"],"sources":["C:\\Users\\Francisco\\Documents\\GitHub\\examenApi\\EXAMEN-API-NOTICIAS\\node_modules\\postcss-functions\\node_modules\\postcss\\lib\\terminal-highlight.es6"],"sourcesContent":["import chalk from 'chalk';\n\nimport tokenizer from './tokenize';\nimport Input    from './input';\n\nconst HIGHLIGHT_THEME = {\n    'brackets': chalk.cyan,\n    'at-word':  chalk.cyan,\n    'call':     chalk.cyan,\n    'comment':  chalk.gray,\n    'string':   chalk.green,\n    'class':    chalk.yellow,\n    'hash':     chalk.magenta,\n    '(':        chalk.cyan,\n    ')':        chalk.cyan,\n    '{':        chalk.yellow,\n    '}':        chalk.yellow,\n    '[':        chalk.yellow,\n    ']':        chalk.yellow,\n    ':':        chalk.yellow,\n    ';':        chalk.yellow\n};\n\nfunction getTokenType([type, value], processor) {\n    if ( type === 'word' ) {\n        if ( value[0] === '.' ) {\n            return 'class';\n        }\n        if ( value[0] === '#' ) {\n            return 'hash';\n        }\n    }\n\n    if ( !processor.endOfFile() ) {\n        let next = processor.nextToken();\n        processor.back(next);\n        if ( next[0] === 'brackets' || next[0] === '(' ) return 'call';\n    }\n\n    return type;\n}\n\nfunction terminalHighlight(css) {\n    let processor = tokenizer(new Input(css), { ignoreErrors: true });\n    let result = '';\n    while ( !processor.endOfFile() ) {\n        let token = processor.nextToken();\n        let color = HIGHLIGHT_THEME[getTokenType(token, processor)];\n        if ( color ) {\n            result += token[1].split(/\\r?\\n/)\n                .map( i => color(i) )\n                .join('\\n');\n        } else {\n            result += token[1];\n        }\n    }\n    return result;\n}\n\nexport default terminalHighlight;\n"],"mappings":";;;AAAA,IAAAA,MAAA,GAAAC,OAAA;;AAEA,IAAAC,SAAA,GAAAD,OAAA;;AACA,IAAAE,MAAA,GAAAF,OAAA;;;;;;;AAEA,IAAMG,eAAA,GAAkB;EACpB,YAAYC,OAAA,CAAAC,OAAA,CAAMC,IADE;EAEpB,WAAYF,OAAA,CAAAC,OAAA,CAAMC,IAFE;EAGpB,QAAYF,OAAA,CAAAC,OAAA,CAAMC,IAHE;EAIpB,WAAYF,OAAA,CAAAC,OAAA,CAAME,IAJE;EAKpB,UAAYH,OAAA,CAAAC,OAAA,CAAMG,KALE;EAMpB,SAAYJ,OAAA,CAAAC,OAAA,CAAMI,MANE;EAOpB,QAAYL,OAAA,CAAAC,OAAA,CAAMK,OAPE;EAQpB,KAAYN,OAAA,CAAAC,OAAA,CAAMC,IARE;EASpB,KAAYF,OAAA,CAAAC,OAAA,CAAMC,IATE;EAUpB,KAAYF,OAAA,CAAAC,OAAA,CAAMI,MAVE;EAWpB,KAAYL,OAAA,CAAAC,OAAA,CAAMI,MAXE;EAYpB,KAAYL,OAAA,CAAAC,OAAA,CAAMI,MAZE;EAapB,KAAYL,OAAA,CAAAC,OAAA,CAAMI,MAbE;EAcpB,KAAYL,OAAA,CAAAC,OAAA,CAAMI,MAdE;EAepB,KAAYL,OAAA,CAAAC,OAAA,CAAMI;AAfE,CAAxB;AAkBA,SAASE,YAATA,CAAAC,IAAA,EAAqCC,SAArC,EAAgD;EAAA,IAAzBC,IAAyB,GAAAF,IAAA;IAAnBG,KAAmB,GAAAH,IAAA;EAC5C,IAAKE,IAAA,KAAS,MAAd,EAAuB;IACnB,IAAKC,KAAA,CAAM,CAAN,MAAa,GAAlB,EAAwB;MACpB,OAAO,OAAP;IACH;IACD,IAAKA,KAAA,CAAM,CAAN,MAAa,GAAlB,EAAwB;MACpB,OAAO,MAAP;IACH;EACJ;EAED,IAAK,CAACF,SAAA,CAAUG,SAAV,EAAN,EAA8B;IAC1B,IAAIC,IAAA,GAAOJ,SAAA,CAAUK,SAAV,EAAX;IACAL,SAAA,CAAUM,IAAV,CAAeF,IAAf;IACA,IAAKA,IAAA,CAAK,CAAL,MAAY,UAAZ,IAA0BA,IAAA,CAAK,CAAL,MAAY,GAA3C,EAAiD,OAAO,MAAP;EACpD;EAED,OAAOH,IAAP;AACH;AAED,SAASM,iBAATA,CAA2BC,GAA3B,EAAgC;EAC5B,IAAIR,SAAA,GAAY,IAAAS,UAAA,CAAAjB,OAAA,EAAU,IAAIkB,OAAA,CAAAlB,OAAJ,CAAUgB,GAAV,CAAV,EAA0B;IAAEG,YAAA,EAAc;EAAhB,CAA1B,CAAhB;EACA,IAAIC,MAAA,GAAS,EAAb;EAF4B,IAAAC,KAAA,YAAAA,MAAA;IAIxB,IAAIC,KAAA,GAAQd,SAAA,CAAUK,SAAV,EAAZ;IACA,IAAIU,KAAA,GAAQzB,eAAA,CAAgBQ,YAAA,CAAagB,KAAb,EAAoBd,SAApB,CAAhB,CAAZ;IACA,IAAKe,KAAL,EAAa;MACTH,MAAA,IAAUE,KAAA,CAAM,CAAN,EAASE,KAAT,CAAe,OAAf,EACLC,GADK,CACA,UAAAC,CAAA;QAAA,OAAKH,KAAA,CAAMG,CAAN,CAAL;MAAA,CADA,EAELC,IAFK,CAEA,IAFA,CAAV;IAGH,CAJD,MAIO;MACHP,MAAA,IAAUE,KAAA,CAAM,CAAN,CAAV;IACH;EAZuB;EAG5B,OAAQ,CAACd,SAAA,CAAUG,SAAV,EAAT,EAAiC;IAAAU,KAAA;EAUhC;EACD,OAAOD,MAAP;AACH;kBAEcL,iB"},"metadata":{},"sourceType":"script","externalDependencies":[]}