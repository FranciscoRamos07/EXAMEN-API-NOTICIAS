{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = applyExpanded;\nvar _postcss = require('postcss');\nvar _postcss2 = _interopRequireDefault(_postcss);\nvar _postcssValueParser = require('postcss-value-parser');\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\nvar _commentRegex = require('comment-regex');\nvar _applyTransformFeatures = require('./applyTransformFeatures');\nvar _applyTransformFeatures2 = _interopRequireDefault(_applyTransformFeatures);\nvar _blank = require('./blank');\nvar _blank2 = _interopRequireDefault(_blank);\nvar _getIndent = require('./getIndent');\nvar _getIndent2 = _interopRequireDefault(_getIndent);\nvar _isSassVariable = require('./isSassVariable');\nvar _isSassVariable2 = _interopRequireDefault(_isSassVariable);\nvar _longest = require('./longest');\nvar _longest2 = _interopRequireDefault(_longest);\nvar _maxSelectorLength = require('./maxSelectorLength');\nvar _prefixedDecls = require('./prefixedDecls');\nvar _prefixedDecls2 = _interopRequireDefault(_prefixedDecls);\nvar _space = require('./space');\nvar _space2 = _interopRequireDefault(_space);\nvar _sameLine = require('./sameLine');\nvar _sameLine2 = _interopRequireDefault(_sameLine);\nvar _walk = require('./walk');\nvar _walk2 = _interopRequireDefault(_walk);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar unprefixed = _postcss2.default.vendor.unprefixed;\nfunction applyExpanded(css, opts) {\n  css.walk(function (rule) {\n    var raws = rule.raws,\n      type = rule.type;\n    if (type === 'decl') {\n      if (raws.value) {\n        rule.value = raws.value.raw.trim();\n      }\n      // Format sass variable `$size: 30em;`\n      if ((0, _isSassVariable2.default)(rule)) {\n        if (rule !== css.first) {\n          rule.raws.before = '\\n';\n        }\n        rule.raws.between = ': ';\n      }\n      var ast = (0, _postcssValueParser2.default)(rule.value);\n      (0, _walk2.default)(ast, function (node, index, parent) {\n        var next = parent.nodes[index + 1];\n        if (node.type === 'function') {\n          node.before = node.after = '';\n        }\n        if (node.type === 'div' && node.value === ',') {\n          node.before = '';\n          node.after = ' ';\n        }\n        if (node.type === 'space') {\n          node.value = ' ';\n        }\n        if (node.type === 'word' && node.value === '!' && parent.nodes[index + 2] && next.type === 'space' && parent.nodes[index + 2].type === 'word') {\n          next.type = 'word';\n          next.value = '';\n        }\n        if (node.type === 'word') {\n          (0, _applyTransformFeatures2.default)(node, opts);\n        }\n      });\n      rule.value = ast.toString();\n\n      // Format `!important`\n      if (rule.important) {\n        rule.raws.important = ' !important';\n      }\n      if (raws.value) {\n        rule.raws.value.raw = rule.value;\n      }\n    }\n    var indent = (0, _getIndent2.default)(rule, opts.indentChar, opts.indentSize);\n    if (type === 'comment') {\n      var prev = rule.prev();\n      if (prev && prev.type === 'decl') {\n        if ((0, _sameLine2.default)(prev, rule)) {\n          rule.raws.before = ' ' + (0, _blank2.default)(rule.raws.before);\n        } else {\n          rule.raws.before = '\\n' + indent + (0, _blank2.default)(rule.raws.before);\n        }\n      }\n      if (!prev && rule !== css.first) {\n        rule.raws.before = '\\n' + indent + (0, _blank2.default)(rule.raws.before);\n      }\n      if (rule.parent && rule.parent.type === 'root') {\n        var next = rule.next();\n        if (next) {\n          next.raws.before = '\\n\\n';\n        }\n        if (rule !== css.first) {\n          rule.raws.before = '\\n\\n';\n        }\n      }\n      return;\n    }\n    rule.raws.before = indent + (0, _blank2.default)(rule.raws.before);\n    if (type === 'rule' || type === 'atrule') {\n      if (!rule.nodes) {\n        rule.raws.between = '';\n      } else {\n        rule.raws.between = ' ';\n      }\n      rule.raws.semicolon = true;\n      if (rule.nodes) {\n        rule.raws.after = '\\n';\n      }\n    }\n    // visual cascade of vendor prefixed properties\n    if (opts.cascade && type === 'rule' && rule.nodes.length > 1) {\n      (function () {\n        var props = [];\n        var prefixed = (0, _prefixedDecls2.default)(rule).sort(_longest2.default).filter(function (_ref) {\n          var prop = _ref.prop;\n          var base = unprefixed(prop);\n          if (!~props.indexOf(base)) {\n            return props.push(base);\n          }\n          return false;\n        });\n        prefixed.forEach(function (prefix) {\n          var base = unprefixed(prefix.prop);\n          var vendor = prefix.prop.replace(base, '').length;\n          rule.nodes.filter(function (_ref2) {\n            var prop = _ref2.prop;\n            return prop && ~prop.indexOf(base);\n          }).forEach(function (decl) {\n            var thisVendor = decl.prop.replace(base, '').length;\n            var extraSpace = vendor - thisVendor;\n            if (extraSpace > 0) {\n              decl.raws.before = (0, _space2.default)(extraSpace) + (0, _blank2.default)(decl.raws.before);\n            }\n          });\n        });\n      })();\n    }\n    if (raws.selector && raws.selector.raw) {\n      rule.selector = rule.raws.selector.raw;\n    }\n    (0, _maxSelectorLength.maxSelectorLength)(rule, opts);\n    if (type === 'atrule') {\n      if (rule.params) {\n        rule.raws.afterName = ' ';\n      }\n      (0, _maxSelectorLength.maxAtRuleLength)(rule, opts);\n    }\n    if (type === 'decl') {\n      if (!(0, _commentRegex.block)().test(rule.raws.between)) {\n        rule.raws.between = ': ';\n      }\n      (0, _maxSelectorLength.maxValueLength)(rule, opts);\n    }\n    if (rule.parent && rule.parent.type !== 'root') {\n      rule.raws.before = '\\n' + (0, _blank2.default)(rule.raws.before);\n      rule.raws.after = '\\n' + indent;\n    }\n    if (rule.parent && rule !== rule.parent.first && (type === 'rule' || type === 'atrule')) {\n      if (type === 'atrule' && !rule.nodes) {\n        rule.raws.before = '\\n' + indent;\n        return;\n      }\n      rule.raws.before = '\\n\\n' + indent;\n    }\n  });\n  css.raws.after = '\\n';\n}\nmodule.exports = exports['default'];","map":{"version":3,"names":["exports","__esModule","default","applyExpanded","_postcss","require","_postcss2","_interopRequireDefault","_postcssValueParser","_postcssValueParser2","_commentRegex","_applyTransformFeatures","_applyTransformFeatures2","_blank","_blank2","_getIndent","_getIndent2","_isSassVariable","_isSassVariable2","_longest","_longest2","_maxSelectorLength","_prefixedDecls","_prefixedDecls2","_space","_space2","_sameLine","_sameLine2","_walk","_walk2","obj","unprefixed","vendor","css","opts","walk","rule","raws","type","value","raw","trim","first","before","between","ast","node","index","parent","next","nodes","after","toString","important","indent","indentChar","indentSize","prev","semicolon","cascade","length","props","prefixed","sort","filter","_ref","prop","base","indexOf","push","forEach","prefix","replace","_ref2","decl","thisVendor","extraSpace","selector","maxSelectorLength","params","afterName","maxAtRuleLength","block","test","maxValueLength","module"],"sources":["C:/Users/Francisco/Documents/GitHub/examenApi/EXAMEN-API-NOTICIAS/node_modules/perfectionist/dist/applyExpanded.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.default = applyExpanded;\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nvar _commentRegex = require('comment-regex');\n\nvar _applyTransformFeatures = require('./applyTransformFeatures');\n\nvar _applyTransformFeatures2 = _interopRequireDefault(_applyTransformFeatures);\n\nvar _blank = require('./blank');\n\nvar _blank2 = _interopRequireDefault(_blank);\n\nvar _getIndent = require('./getIndent');\n\nvar _getIndent2 = _interopRequireDefault(_getIndent);\n\nvar _isSassVariable = require('./isSassVariable');\n\nvar _isSassVariable2 = _interopRequireDefault(_isSassVariable);\n\nvar _longest = require('./longest');\n\nvar _longest2 = _interopRequireDefault(_longest);\n\nvar _maxSelectorLength = require('./maxSelectorLength');\n\nvar _prefixedDecls = require('./prefixedDecls');\n\nvar _prefixedDecls2 = _interopRequireDefault(_prefixedDecls);\n\nvar _space = require('./space');\n\nvar _space2 = _interopRequireDefault(_space);\n\nvar _sameLine = require('./sameLine');\n\nvar _sameLine2 = _interopRequireDefault(_sameLine);\n\nvar _walk = require('./walk');\n\nvar _walk2 = _interopRequireDefault(_walk);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar unprefixed = _postcss2.default.vendor.unprefixed;\nfunction applyExpanded(css, opts) {\n    css.walk(function (rule) {\n        var raws = rule.raws,\n            type = rule.type;\n\n        if (type === 'decl') {\n            if (raws.value) {\n                rule.value = raws.value.raw.trim();\n            }\n            // Format sass variable `$size: 30em;`\n            if ((0, _isSassVariable2.default)(rule)) {\n                if (rule !== css.first) {\n                    rule.raws.before = '\\n';\n                }\n                rule.raws.between = ': ';\n            }\n\n            var ast = (0, _postcssValueParser2.default)(rule.value);\n\n            (0, _walk2.default)(ast, function (node, index, parent) {\n                var next = parent.nodes[index + 1];\n                if (node.type === 'function') {\n                    node.before = node.after = '';\n                }\n                if (node.type === 'div' && node.value === ',') {\n                    node.before = '';\n                    node.after = ' ';\n                }\n                if (node.type === 'space') {\n                    node.value = ' ';\n                }\n                if (node.type === 'word' && node.value === '!' && parent.nodes[index + 2] && next.type === 'space' && parent.nodes[index + 2].type === 'word') {\n                    next.type = 'word';\n                    next.value = '';\n                }\n                if (node.type === 'word') {\n                    (0, _applyTransformFeatures2.default)(node, opts);\n                }\n            });\n\n            rule.value = ast.toString();\n\n            // Format `!important`\n            if (rule.important) {\n                rule.raws.important = ' !important';\n            }\n\n            if (raws.value) {\n                rule.raws.value.raw = rule.value;\n            }\n        }\n        var indent = (0, _getIndent2.default)(rule, opts.indentChar, opts.indentSize);\n        if (type === 'comment') {\n            var prev = rule.prev();\n            if (prev && prev.type === 'decl') {\n                if ((0, _sameLine2.default)(prev, rule)) {\n                    rule.raws.before = ' ' + (0, _blank2.default)(rule.raws.before);\n                } else {\n                    rule.raws.before = '\\n' + indent + (0, _blank2.default)(rule.raws.before);\n                }\n            }\n            if (!prev && rule !== css.first) {\n                rule.raws.before = '\\n' + indent + (0, _blank2.default)(rule.raws.before);\n            }\n            if (rule.parent && rule.parent.type === 'root') {\n                var next = rule.next();\n                if (next) {\n                    next.raws.before = '\\n\\n';\n                }\n                if (rule !== css.first) {\n                    rule.raws.before = '\\n\\n';\n                }\n            }\n            return;\n        }\n        rule.raws.before = indent + (0, _blank2.default)(rule.raws.before);\n        if (type === 'rule' || type === 'atrule') {\n            if (!rule.nodes) {\n                rule.raws.between = '';\n            } else {\n                rule.raws.between = ' ';\n            }\n            rule.raws.semicolon = true;\n            if (rule.nodes) {\n                rule.raws.after = '\\n';\n            }\n        }\n        // visual cascade of vendor prefixed properties\n        if (opts.cascade && type === 'rule' && rule.nodes.length > 1) {\n            (function () {\n                var props = [];\n                var prefixed = (0, _prefixedDecls2.default)(rule).sort(_longest2.default).filter(function (_ref) {\n                    var prop = _ref.prop;\n\n                    var base = unprefixed(prop);\n                    if (!~props.indexOf(base)) {\n                        return props.push(base);\n                    }\n                    return false;\n                });\n                prefixed.forEach(function (prefix) {\n                    var base = unprefixed(prefix.prop);\n                    var vendor = prefix.prop.replace(base, '').length;\n                    rule.nodes.filter(function (_ref2) {\n                        var prop = _ref2.prop;\n                        return prop && ~prop.indexOf(base);\n                    }).forEach(function (decl) {\n                        var thisVendor = decl.prop.replace(base, '').length;\n                        var extraSpace = vendor - thisVendor;\n                        if (extraSpace > 0) {\n                            decl.raws.before = (0, _space2.default)(extraSpace) + (0, _blank2.default)(decl.raws.before);\n                        }\n                    });\n                });\n            })();\n        }\n        if (raws.selector && raws.selector.raw) {\n            rule.selector = rule.raws.selector.raw;\n        }\n        (0, _maxSelectorLength.maxSelectorLength)(rule, opts);\n        if (type === 'atrule') {\n            if (rule.params) {\n                rule.raws.afterName = ' ';\n            }\n            (0, _maxSelectorLength.maxAtRuleLength)(rule, opts);\n        }\n        if (type === 'decl') {\n            if (!(0, _commentRegex.block)().test(rule.raws.between)) {\n                rule.raws.between = ': ';\n            }\n            (0, _maxSelectorLength.maxValueLength)(rule, opts);\n        }\n        if (rule.parent && rule.parent.type !== 'root') {\n            rule.raws.before = '\\n' + (0, _blank2.default)(rule.raws.before);\n            rule.raws.after = '\\n' + indent;\n        }\n        if (rule.parent && rule !== rule.parent.first && (type === 'rule' || type === 'atrule')) {\n            if (type === 'atrule' && !rule.nodes) {\n                rule.raws.before = '\\n' + indent;\n                return;\n            }\n            rule.raws.before = '\\n\\n' + indent;\n        }\n    });\n    css.raws.after = '\\n';\n}\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}