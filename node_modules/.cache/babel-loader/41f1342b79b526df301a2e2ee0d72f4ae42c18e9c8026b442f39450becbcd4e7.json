{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _sourceMap = require('source-map');\nvar _sourceMap2 = _interopRequireDefault(_sourceMap);\nvar _path = require('path');\nvar _path2 = _interopRequireDefault(_path);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar MapGenerator = function () {\n  function MapGenerator(stringify, root, opts) {\n    _classCallCheck(this, MapGenerator);\n    this.stringify = stringify;\n    this.mapOpts = opts.map || {};\n    this.root = root;\n    this.opts = opts;\n  }\n  MapGenerator.prototype.isMap = function isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map;\n    } else {\n      return this.previous().length > 0;\n    }\n  };\n  MapGenerator.prototype.previous = function previous() {\n    var _this = this;\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n      this.root.walk(function (node) {\n        if (node.source && node.source.input.map) {\n          var map = node.source.input.map;\n          if (_this.previousMaps.indexOf(map) === -1) {\n            _this.previousMaps.push(map);\n          }\n        }\n      });\n    }\n    return this.previousMaps;\n  };\n  MapGenerator.prototype.isInline = function isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline;\n    }\n    var annotation = this.mapOpts.annotation;\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false;\n    }\n    if (this.previous().length) {\n      return this.previous().some(function (i) {\n        return i.inline;\n      });\n    } else {\n      return true;\n    }\n  };\n  MapGenerator.prototype.isSourcesContent = function isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent;\n    }\n    if (this.previous().length) {\n      return this.previous().some(function (i) {\n        return i.withContent();\n      });\n    } else {\n      return true;\n    }\n  };\n  MapGenerator.prototype.clearAnnotation = function clearAnnotation() {\n    if (this.mapOpts.annotation === false) return;\n    var node = void 0;\n    for (var i = this.root.nodes.length - 1; i >= 0; i--) {\n      node = this.root.nodes[i];\n      if (node.type !== 'comment') continue;\n      if (node.text.indexOf('# sourceMappingURL=') === 0) {\n        this.root.removeChild(i);\n      }\n    }\n  };\n  MapGenerator.prototype.setSourcesContent = function setSourcesContent() {\n    var _this2 = this;\n    var already = {};\n    this.root.walk(function (node) {\n      if (node.source) {\n        var from = node.source.input.from;\n        if (from && !already[from]) {\n          already[from] = true;\n          var relative = _this2.relative(from);\n          _this2.map.setSourceContent(relative, node.source.input.css);\n        }\n      }\n    });\n  };\n  MapGenerator.prototype.applyPrevMaps = function applyPrevMaps() {\n    for (var _iterator = this.previous(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n      var prev = _ref;\n      var from = this.relative(prev.file);\n      var root = prev.root || _path2.default.dirname(prev.file);\n      var map = void 0;\n      if (this.mapOpts.sourcesContent === false) {\n        map = new _sourceMap2.default.SourceMapConsumer(prev.text);\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(function () {\n            return null;\n          });\n        }\n      } else {\n        map = prev.consumer();\n      }\n      this.map.applySourceMap(map, from, this.relative(root));\n    }\n  };\n  MapGenerator.prototype.isAnnotation = function isAnnotation() {\n    if (this.isInline()) {\n      return true;\n    } else if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation;\n    } else if (this.previous().length) {\n      return this.previous().some(function (i) {\n        return i.annotation;\n      });\n    } else {\n      return true;\n    }\n  };\n  MapGenerator.prototype.toBase64 = function toBase64(str) {\n    if (Buffer) {\n      if (Buffer.from && Buffer.from !== Uint8Array.from) {\n        return Buffer.from(str).toString('base64');\n      } else {\n        return new Buffer(str).toString('base64');\n      }\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)));\n    }\n  };\n  MapGenerator.prototype.addAnnotation = function addAnnotation() {\n    var content = void 0;\n    if (this.isInline()) {\n      content = 'data:application/json;base64,' + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation;\n    } else {\n      content = this.outputFile() + '.map';\n    }\n    var eol = '\\n';\n    if (this.css.indexOf('\\r\\n') !== -1) eol = '\\r\\n';\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n  };\n  MapGenerator.prototype.outputFile = function outputFile() {\n    if (this.opts.to) {\n      return this.relative(this.opts.to);\n    } else if (this.opts.from) {\n      return this.relative(this.opts.from);\n    } else {\n      return 'to.css';\n    }\n  };\n  MapGenerator.prototype.generateMap = function generateMap() {\n    this.generateString();\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n    if (this.isInline()) {\n      return [this.css];\n    } else {\n      return [this.css, this.map];\n    }\n  };\n  MapGenerator.prototype.relative = function relative(file) {\n    if (file.indexOf('<') === 0) return file;\n    if (/^\\w+:\\/\\//.test(file)) return file;\n    var from = this.opts.to ? _path2.default.dirname(this.opts.to) : '.';\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = _path2.default.dirname(_path2.default.resolve(from, this.mapOpts.annotation));\n    }\n    file = _path2.default.relative(from, file);\n    if (_path2.default.sep === '\\\\') {\n      return file.replace(/\\\\/g, '/');\n    } else {\n      return file;\n    }\n  };\n  MapGenerator.prototype.sourcePath = function sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.mapOpts.from;\n    } else {\n      return this.relative(node.source.input.from);\n    }\n  };\n  MapGenerator.prototype.generateString = function generateString() {\n    var _this3 = this;\n    this.css = '';\n    this.map = new _sourceMap2.default.SourceMapGenerator({\n      file: this.outputFile()\n    });\n    var line = 1;\n    var column = 1;\n    var lines = void 0,\n      last = void 0;\n    this.stringify(this.root, function (str, node, type) {\n      _this3.css += str;\n      if (node && type !== 'end') {\n        if (node.source && node.source.start) {\n          _this3.map.addMapping({\n            source: _this3.sourcePath(node),\n            generated: {\n              line: line,\n              column: column - 1\n            },\n            original: {\n              line: node.source.start.line,\n              column: node.source.start.column - 1\n            }\n          });\n        } else {\n          _this3.map.addMapping({\n            source: '<no source>',\n            original: {\n              line: 1,\n              column: 0\n            },\n            generated: {\n              line: line,\n              column: column - 1\n            }\n          });\n        }\n      }\n      lines = str.match(/\\n/g);\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf('\\n');\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n      if (node && type !== 'start') {\n        if (node.source && node.source.end) {\n          _this3.map.addMapping({\n            source: _this3.sourcePath(node),\n            generated: {\n              line: line,\n              column: column - 1\n            },\n            original: {\n              line: node.source.end.line,\n              column: node.source.end.column\n            }\n          });\n        } else {\n          _this3.map.addMapping({\n            source: '<no source>',\n            original: {\n              line: 1,\n              column: 0\n            },\n            generated: {\n              line: line,\n              column: column - 1\n            }\n          });\n        }\n      }\n    });\n  };\n  MapGenerator.prototype.generate = function generate() {\n    this.clearAnnotation();\n    if (this.isMap()) {\n      return this.generateMap();\n    } else {\n      var result = '';\n      this.stringify(this.root, function (i) {\n        result += i;\n      });\n      return [result];\n    }\n  };\n  return MapGenerator;\n}();\nexports.default = MapGenerator;\nmodule.exports = exports['default'];","map":{"version":3,"names":["_sourceMap","require","_path","MapGenerator","stringify","root","opts","_classCallCheck","mapOpts","map","isMap","previous","length","_this","previousMaps","walk","node","source","input","indexOf","push","isInline","inline","annotation","some","i","isSourcesContent","sourcesContent","withContent","clearAnnotation","nodes","type","text","removeChild","setSourcesContent","_this2","already","from","relative","setSourceContent","css","applyPrevMaps","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","value","prev","file","_path2","default","dirname","_sourceMap2","SourceMapConsumer","consumer","applySourceMap","isAnnotation","toBase64","str","Buffer","Uint8Array","toString","window","btoa","unescape","encodeURIComponent","addAnnotation","content","outputFile","eol","to","generateMap","generateString","test","resolve","sep","replace","sourcePath","_this3","SourceMapGenerator","line","column","lines","last","start","addMapping","generated","original","match","lastIndexOf","end","generate","result"],"sources":["C:\\Users\\Francisco\\Documents\\GitHub\\examenApi\\EXAMEN-API-NOTICIAS\\node_modules\\postcss-functions\\node_modules\\postcss\\lib\\map-generator.es6"],"sourcesContent":["import mozilla from 'source-map';\nimport path    from 'path';\n\nexport default class MapGenerator {\n\n    constructor(stringify, root, opts) {\n        this.stringify = stringify;\n        this.mapOpts   = opts.map || { };\n        this.root      = root;\n        this.opts      = opts;\n    }\n\n    isMap() {\n        if ( typeof this.opts.map !== 'undefined' ) {\n            return !!this.opts.map;\n        } else {\n            return this.previous().length > 0;\n        }\n    }\n\n    previous() {\n        if ( !this.previousMaps ) {\n            this.previousMaps = [];\n            this.root.walk( node => {\n                if ( node.source && node.source.input.map ) {\n                    let map = node.source.input.map;\n                    if ( this.previousMaps.indexOf(map) === -1 ) {\n                        this.previousMaps.push(map);\n                    }\n                }\n            });\n        }\n\n        return this.previousMaps;\n    }\n\n    isInline() {\n        if ( typeof this.mapOpts.inline !== 'undefined' ) {\n            return this.mapOpts.inline;\n        }\n\n        let annotation = this.mapOpts.annotation;\n        if ( typeof annotation !== 'undefined' && annotation !== true ) {\n            return false;\n        }\n\n        if ( this.previous().length ) {\n            return this.previous().some( i => i.inline );\n        } else {\n            return true;\n        }\n    }\n\n    isSourcesContent() {\n        if ( typeof this.mapOpts.sourcesContent !== 'undefined' ) {\n            return this.mapOpts.sourcesContent;\n        }\n        if ( this.previous().length ) {\n            return this.previous().some( i => i.withContent() );\n        } else {\n            return true;\n        }\n    }\n\n    clearAnnotation() {\n        if ( this.mapOpts.annotation === false ) return;\n\n        let node;\n        for ( let i = this.root.nodes.length - 1; i >= 0; i-- ) {\n            node = this.root.nodes[i];\n            if ( node.type !== 'comment' ) continue;\n            if ( node.text.indexOf('# sourceMappingURL=') === 0 ) {\n                this.root.removeChild(i);\n            }\n        }\n    }\n\n    setSourcesContent() {\n        let already = { };\n        this.root.walk( node => {\n            if ( node.source ) {\n                let from = node.source.input.from;\n                if ( from && !already[from] ) {\n                    already[from] = true;\n                    let relative = this.relative(from);\n                    this.map.setSourceContent(relative, node.source.input.css);\n                }\n            }\n        });\n    }\n\n    applyPrevMaps() {\n        for ( let prev of this.previous() ) {\n            let from = this.relative(prev.file);\n            let root = prev.root || path.dirname(prev.file);\n            let map;\n\n            if ( this.mapOpts.sourcesContent === false ) {\n                map = new mozilla.SourceMapConsumer(prev.text);\n                if ( map.sourcesContent ) {\n                    map.sourcesContent = map.sourcesContent.map( () => null );\n                }\n            } else {\n                map = prev.consumer();\n            }\n\n            this.map.applySourceMap(map, from, this.relative(root));\n        }\n    }\n\n    isAnnotation() {\n        if ( this.isInline() ) {\n            return true;\n        } else if ( typeof this.mapOpts.annotation !== 'undefined' ) {\n            return this.mapOpts.annotation;\n        } else if ( this.previous().length ) {\n            return this.previous().some( i => i.annotation );\n        } else {\n            return true;\n        }\n    }\n\n    toBase64(str) {\n        if ( Buffer ) {\n            if ( Buffer.from && Buffer.from !== Uint8Array.from ) {\n                return Buffer.from(str).toString('base64');\n            } else {\n                return new Buffer(str).toString('base64');\n            }\n        } else {\n            return window.btoa(unescape(encodeURIComponent(str)));\n        }\n    }\n\n    addAnnotation() {\n        let content;\n\n        if ( this.isInline() ) {\n\n            content = 'data:application/json;base64,' +\n                this.toBase64(this.map.toString());\n\n        } else if ( typeof this.mapOpts.annotation === 'string' ) {\n            content = this.mapOpts.annotation;\n\n        } else {\n            content = this.outputFile() + '.map';\n        }\n\n        let eol   = '\\n';\n        if ( this.css.indexOf('\\r\\n') !== -1 ) eol = '\\r\\n';\n\n        this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n    }\n\n    outputFile() {\n        if ( this.opts.to ) {\n            return this.relative(this.opts.to);\n        } else if ( this.opts.from ) {\n            return this.relative(this.opts.from);\n        } else {\n            return 'to.css';\n        }\n    }\n\n    generateMap() {\n        this.generateString();\n        if ( this.isSourcesContent() )    this.setSourcesContent();\n        if ( this.previous().length > 0 ) this.applyPrevMaps();\n        if ( this.isAnnotation() )        this.addAnnotation();\n\n        if ( this.isInline() ) {\n            return [this.css];\n        } else {\n            return [this.css, this.map];\n        }\n    }\n\n    relative(file) {\n        if ( file.indexOf('<') === 0 ) return file;\n        if ( /^\\w+:\\/\\//.test(file) ) return file;\n\n        let from = this.opts.to ? path.dirname(this.opts.to) : '.';\n\n        if ( typeof this.mapOpts.annotation === 'string' ) {\n            from = path.dirname( path.resolve(from, this.mapOpts.annotation) );\n        }\n\n        file = path.relative(from, file);\n        if ( path.sep === '\\\\' ) {\n            return file.replace(/\\\\/g, '/');\n        } else {\n            return file;\n        }\n    }\n\n    sourcePath(node) {\n        if ( this.mapOpts.from ) {\n            return this.mapOpts.from;\n        } else {\n            return this.relative(node.source.input.from);\n        }\n    }\n\n    generateString() {\n        this.css = '';\n        this.map = new mozilla.SourceMapGenerator({ file: this.outputFile() });\n\n        let line   = 1;\n        let column = 1;\n\n        let lines, last;\n        this.stringify(this.root, (str, node, type) => {\n            this.css += str;\n\n            if ( node && type !== 'end' ) {\n                if ( node.source && node.source.start ) {\n                    this.map.addMapping({\n                        source:    this.sourcePath(node),\n                        generated: { line, column: column - 1 },\n                        original:  {\n                            line:   node.source.start.line,\n                            column: node.source.start.column - 1\n                        }\n                    });\n                } else {\n                    this.map.addMapping({\n                        source:    '<no source>',\n                        original:  { line: 1, column: 0 },\n                        generated: { line, column: column - 1 }\n                    });\n                }\n            }\n\n            lines = str.match(/\\n/g);\n            if ( lines ) {\n                line  += lines.length;\n                last   = str.lastIndexOf('\\n');\n                column = str.length - last;\n            } else {\n                column += str.length;\n            }\n\n            if ( node && type !== 'start' ) {\n                if ( node.source && node.source.end ) {\n                    this.map.addMapping({\n                        source:    this.sourcePath(node),\n                        generated: { line, column: column - 1 },\n                        original:  {\n                            line:   node.source.end.line,\n                            column: node.source.end.column\n                        }\n                    });\n                } else {\n                    this.map.addMapping({\n                        source:    '<no source>',\n                        original:  { line: 1, column: 0 },\n                        generated: { line, column: column - 1 }\n                    });\n                }\n            }\n        });\n    }\n\n    generate() {\n        this.clearAnnotation();\n\n        if ( this.isMap() ) {\n            return this.generateMap();\n        } else {\n            let result = '';\n            this.stringify(this.root, i => {\n                result += i;\n            });\n            return [result];\n        }\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}