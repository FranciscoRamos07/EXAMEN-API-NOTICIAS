{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n/**\n * Contains helpers for working with vendor prefixes.\n *\n * @example\n * const vendor = postcss.vendor;\n *\n * @namespace vendor\n */\nvar vendor = {\n  /**\n   * Returns the vendor prefix extracted from an input string.\n   *\n   * @param {string} prop - string with or without vendor prefix\n   *\n   * @return {string} vendor prefix or empty string\n   *\n   * @example\n   * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\n   * postcss.vendor.prefix('tab-size')      //=> ''\n   */\n  prefix: function prefix(prop) {\n    var match = prop.match(/^(-\\w+-)/);\n    if (match) {\n      return match[0];\n    } else {\n      return '';\n    }\n  },\n  /**\n   * Returns the input string stripped of its vendor prefix.\n   *\n   * @param {string} prop - string with or without vendor prefix\n   *\n   * @return {string} string name without vendor prefixes\n   *\n   * @example\n   * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n   */\n  unprefixed: function unprefixed(prop) {\n    return prop.replace(/^-\\w+-/, '');\n  }\n};\nexports.default = vendor;\nmodule.exports = exports['default'];","map":{"version":3,"names":["vendor","prefix","prop","match","unprefixed","replace"],"sources":["C:\\Users\\Francisco\\Documents\\GitHub\\examenApi\\EXAMEN-API-NOTICIAS\\node_modules\\perfectionist\\node_modules\\postcss\\lib\\vendor.es6"],"sourcesContent":["/**\n * Contains helpers for working with vendor prefixes.\n *\n * @example\n * const vendor = postcss.vendor;\n *\n * @namespace vendor\n */\nlet vendor = {\n\n    /**\n     * Returns the vendor prefix extracted from an input string.\n     *\n     * @param {string} prop - string with or without vendor prefix\n     *\n     * @return {string} vendor prefix or empty string\n     *\n     * @example\n     * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\n     * postcss.vendor.prefix('tab-size')      //=> ''\n     */\n    prefix(prop) {\n        let match = prop.match(/^(-\\w+-)/);\n        if ( match ) {\n            return match[0];\n        } else {\n            return '';\n        }\n    },\n\n    /**\n     * Returns the input string stripped of its vendor prefix.\n     *\n     * @param {string} prop - string with or without vendor prefix\n     *\n     * @return {string} string name without vendor prefixes\n     *\n     * @example\n     * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n     */\n    unprefixed(prop) {\n        return prop.replace(/^-\\w+-/, '');\n    }\n\n};\n\nexport default vendor;\n"],"mappings":";;;AAAA;;;;;;;;AAQA,IAAIA,MAAA,GAAS;EAET;;;;;;;;;;;EAWAC,MAbS,WAAAA,OAaFC,IAbE,EAaI;IACT,IAAIC,KAAA,GAAQD,IAAA,CAAKC,KAAL,CAAW,UAAX,CAAZ;IACA,IAAKA,KAAL,EAAa;MACT,OAAOA,KAAA,CAAM,CAAN,CAAP;IACH,CAFD,MAEO;MACH,OAAO,EAAP;IACH;EACJ,CApBQ;EAsBT;;;;;;;;;;EAUAC,UAhCS,WAAAA,WAgCEF,IAhCF,EAgCQ;IACb,OAAOA,IAAA,CAAKG,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAP;EACH;AAlCQ,CAAb;kBAsCeL,M"},"metadata":{},"sourceType":"script","externalDependencies":[]}