{"ast":null,"code":"'use strict';\n\nvar _lodash = require('lodash');\nvar _lodash2 = _interopRequireDefault(_lodash);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction extractMinWidths(breakpoints) {\n  return _lodash2.default.flatMap(breakpoints, breakpoints => {\n    if (_lodash2.default.isString(breakpoints)) {\n      breakpoints = {\n        min: breakpoints\n      };\n    }\n    if (!_lodash2.default.isArray(breakpoints)) {\n      breakpoints = [breakpoints];\n    }\n    return (0, _lodash2.default)(breakpoints).filter(breakpoint => {\n      return _lodash2.default.has(breakpoint, 'min') || _lodash2.default.has(breakpoint, 'min-width');\n    }).map(breakpoint => {\n      return _lodash2.default.get(breakpoint, 'min-width', breakpoint.min);\n    }).value();\n  });\n} /* eslint-disable no-shadow */\n\nmodule.exports = function (options) {\n  return function ({\n    addComponents,\n    config\n  }) {\n    const screens = _lodash2.default.get(options, 'screens', config('screens'));\n    const minWidths = extractMinWidths(screens);\n    const atRules = _lodash2.default.map(minWidths, minWidth => {\n      return {\n        [`@media (min-width: ${minWidth})`]: {\n          '.container': {\n            'max-width': minWidth\n          }\n        }\n      };\n    });\n    addComponents([{\n      '.container': Object.assign({\n        width: '100%'\n      }, _lodash2.default.get(options, 'center', false) ? {\n        marginRight: 'auto',\n        marginLeft: 'auto'\n      } : {}, _lodash2.default.has(options, 'padding') ? {\n        paddingRight: options.padding,\n        paddingLeft: options.padding\n      } : {})\n    }, ...atRules]);\n  };\n};","map":{"version":3,"names":["_lodash","require","_lodash2","_interopRequireDefault","obj","__esModule","default","extractMinWidths","breakpoints","flatMap","isString","min","isArray","filter","breakpoint","has","map","get","value","module","exports","options","addComponents","config","screens","minWidths","atRules","minWidth","Object","assign","width","marginRight","marginLeft","paddingRight","padding","paddingLeft"],"sources":["C:/Users/Francisco/Documents/GitHub/examenApi/EXAMEN-API-NOTICIAS/node_modules/tailwindcss/lib/plugins/container.js"],"sourcesContent":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction extractMinWidths(breakpoints) {\n  return _lodash2.default.flatMap(breakpoints, breakpoints => {\n    if (_lodash2.default.isString(breakpoints)) {\n      breakpoints = { min: breakpoints };\n    }\n\n    if (!_lodash2.default.isArray(breakpoints)) {\n      breakpoints = [breakpoints];\n    }\n\n    return (0, _lodash2.default)(breakpoints).filter(breakpoint => {\n      return _lodash2.default.has(breakpoint, 'min') || _lodash2.default.has(breakpoint, 'min-width');\n    }).map(breakpoint => {\n      return _lodash2.default.get(breakpoint, 'min-width', breakpoint.min);\n    }).value();\n  });\n} /* eslint-disable no-shadow */\n\n\nmodule.exports = function (options) {\n  return function ({ addComponents, config }) {\n    const screens = _lodash2.default.get(options, 'screens', config('screens'));\n\n    const minWidths = extractMinWidths(screens);\n\n    const atRules = _lodash2.default.map(minWidths, minWidth => {\n      return {\n        [`@media (min-width: ${minWidth})`]: {\n          '.container': {\n            'max-width': minWidth\n          }\n        }\n      };\n    });\n\n    addComponents([{\n      '.container': Object.assign({ width: '100%' }, _lodash2.default.get(options, 'center', false) ? { marginRight: 'auto', marginLeft: 'auto' } : {}, _lodash2.default.has(options, 'padding') ? { paddingRight: options.padding, paddingLeft: options.padding } : {})\n    }, ...atRules]);\n  };\n};"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE/B,IAAIC,QAAQ,GAAGC,sBAAsB,CAACH,OAAO,CAAC;AAE9C,SAASG,sBAAsBA,CAACC,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;AAE9F,SAASG,gBAAgBA,CAACC,WAAW,EAAE;EACrC,OAAON,QAAQ,CAACI,OAAO,CAACG,OAAO,CAACD,WAAW,EAAEA,WAAW,IAAI;IAC1D,IAAIN,QAAQ,CAACI,OAAO,CAACI,QAAQ,CAACF,WAAW,CAAC,EAAE;MAC1CA,WAAW,GAAG;QAAEG,GAAG,EAAEH;MAAY,CAAC;IACpC;IAEA,IAAI,CAACN,QAAQ,CAACI,OAAO,CAACM,OAAO,CAACJ,WAAW,CAAC,EAAE;MAC1CA,WAAW,GAAG,CAACA,WAAW,CAAC;IAC7B;IAEA,OAAO,CAAC,CAAC,EAAEN,QAAQ,CAACI,OAAO,EAAEE,WAAW,CAAC,CAACK,MAAM,CAACC,UAAU,IAAI;MAC7D,OAAOZ,QAAQ,CAACI,OAAO,CAACS,GAAG,CAACD,UAAU,EAAE,KAAK,CAAC,IAAIZ,QAAQ,CAACI,OAAO,CAACS,GAAG,CAACD,UAAU,EAAE,WAAW,CAAC;IACjG,CAAC,CAAC,CAACE,GAAG,CAACF,UAAU,IAAI;MACnB,OAAOZ,QAAQ,CAACI,OAAO,CAACW,GAAG,CAACH,UAAU,EAAE,WAAW,EAAEA,UAAU,CAACH,GAAG,CAAC;IACtE,CAAC,CAAC,CAACO,KAAK,CAAC,CAAC;EACZ,CAAC,CAAC;AACJ,CAAC,CAAC;;AAGFC,MAAM,CAACC,OAAO,GAAG,UAAUC,OAAO,EAAE;EAClC,OAAO,UAAU;IAAEC,aAAa;IAAEC;EAAO,CAAC,EAAE;IAC1C,MAAMC,OAAO,GAAGtB,QAAQ,CAACI,OAAO,CAACW,GAAG,CAACI,OAAO,EAAE,SAAS,EAAEE,MAAM,CAAC,SAAS,CAAC,CAAC;IAE3E,MAAME,SAAS,GAAGlB,gBAAgB,CAACiB,OAAO,CAAC;IAE3C,MAAME,OAAO,GAAGxB,QAAQ,CAACI,OAAO,CAACU,GAAG,CAACS,SAAS,EAAEE,QAAQ,IAAI;MAC1D,OAAO;QACL,CAAE,sBAAqBA,QAAS,GAAE,GAAG;UACnC,YAAY,EAAE;YACZ,WAAW,EAAEA;UACf;QACF;MACF,CAAC;IACH,CAAC,CAAC;IAEFL,aAAa,CAAC,CAAC;MACb,YAAY,EAAEM,MAAM,CAACC,MAAM,CAAC;QAAEC,KAAK,EAAE;MAAO,CAAC,EAAE5B,QAAQ,CAACI,OAAO,CAACW,GAAG,CAACI,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG;QAAEU,WAAW,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAO,CAAC,GAAG,CAAC,CAAC,EAAE9B,QAAQ,CAACI,OAAO,CAACS,GAAG,CAACM,OAAO,EAAE,SAAS,CAAC,GAAG;QAAEY,YAAY,EAAEZ,OAAO,CAACa,OAAO;QAAEC,WAAW,EAAEd,OAAO,CAACa;MAAQ,CAAC,GAAG,CAAC,CAAC;IACnQ,CAAC,EAAE,GAAGR,OAAO,CAAC,CAAC;EACjB,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}