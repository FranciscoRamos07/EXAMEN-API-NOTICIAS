{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = applyCompressed;\nvar _commentRegex = require('comment-regex');\nvar _postcssValueParser = require('postcss-value-parser');\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\nvar _applyTransformFeatures = require('./applyTransformFeatures');\nvar _applyTransformFeatures2 = _interopRequireDefault(_applyTransformFeatures);\nvar _isSassVariable = require('./isSassVariable');\nvar _isSassVariable2 = _interopRequireDefault(_isSassVariable);\nvar _walk = require('./walk');\nvar _walk2 = _interopRequireDefault(_walk);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction applyCompressed(css, opts) {\n  css.walk(function (rule) {\n    var raws = rule.raws,\n      type = rule.type;\n    rule.raws.semicolon = false;\n    if (type === 'comment' && raws.inline) {\n      rule.raws.inline = null;\n    }\n    if (type === 'rule' || type === 'atrule') {\n      rule.raws.between = rule.raws.after = '';\n    }\n    if (type === 'decl' && !(0, _commentRegex.block)().test(raws.between)) {\n      rule.raws.between = ':';\n    }\n    if (rule.type === 'decl') {\n      if (raws.value) {\n        rule.value = raws.value.raw.trim();\n      }\n      var ast = (0, _postcssValueParser2.default)(rule.value);\n      (0, _walk2.default)(ast, function (node, index, parent) {\n        var next = parent.nodes[index + 1];\n        if (node.type === 'div' && node.value === ',' || node.type === 'function') {\n          node.before = node.after = '';\n        }\n        if (node.type === 'space') {\n          node.value = ' ';\n          if (next.type === 'word' && next.value[0] === '!') {\n            node.value = '';\n          }\n        }\n        if (node.type === 'word' && node.value === '!' && parent.nodes[index + 2] && next.type === 'space' && parent.nodes[index + 2].type === 'word') {\n          next.type = 'word';\n          next.value = '';\n        }\n        if (node.type === 'word') {\n          (0, _applyTransformFeatures2.default)(node, opts);\n        }\n      });\n      rule.value = ast.toString();\n      if ((0, _isSassVariable2.default)(rule)) {\n        rule.raws.before = '';\n      }\n\n      // Format `!important`\n      if (rule.important) {\n        rule.raws.important = '!important';\n      }\n      if (raws.value) {\n        rule.raws.value.raw = rule.value;\n      }\n    }\n  });\n  // Remove final newline\n  css.raws.after = '';\n}\nmodule.exports = exports['default'];","map":{"version":3,"names":["exports","__esModule","default","applyCompressed","_commentRegex","require","_postcssValueParser","_postcssValueParser2","_interopRequireDefault","_applyTransformFeatures","_applyTransformFeatures2","_isSassVariable","_isSassVariable2","_walk","_walk2","obj","css","opts","walk","rule","raws","type","semicolon","inline","between","after","block","test","value","raw","trim","ast","node","index","parent","next","nodes","before","toString","important","module"],"sources":["C:/Users/Francisco/Documents/GitHub/examenApi/EXAMEN-API-NOTICIAS/node_modules/perfectionist/dist/applyCompressed.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.default = applyCompressed;\n\nvar _commentRegex = require('comment-regex');\n\nvar _postcssValueParser = require('postcss-value-parser');\n\nvar _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);\n\nvar _applyTransformFeatures = require('./applyTransformFeatures');\n\nvar _applyTransformFeatures2 = _interopRequireDefault(_applyTransformFeatures);\n\nvar _isSassVariable = require('./isSassVariable');\n\nvar _isSassVariable2 = _interopRequireDefault(_isSassVariable);\n\nvar _walk = require('./walk');\n\nvar _walk2 = _interopRequireDefault(_walk);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction applyCompressed(css, opts) {\n    css.walk(function (rule) {\n        var raws = rule.raws,\n            type = rule.type;\n\n        rule.raws.semicolon = false;\n        if (type === 'comment' && raws.inline) {\n            rule.raws.inline = null;\n        }\n        if (type === 'rule' || type === 'atrule') {\n            rule.raws.between = rule.raws.after = '';\n        }\n        if (type === 'decl' && !(0, _commentRegex.block)().test(raws.between)) {\n            rule.raws.between = ':';\n        }\n        if (rule.type === 'decl') {\n            if (raws.value) {\n                rule.value = raws.value.raw.trim();\n            }\n\n            var ast = (0, _postcssValueParser2.default)(rule.value);\n\n            (0, _walk2.default)(ast, function (node, index, parent) {\n                var next = parent.nodes[index + 1];\n                if (node.type === 'div' && node.value === ',' || node.type === 'function') {\n                    node.before = node.after = '';\n                }\n                if (node.type === 'space') {\n                    node.value = ' ';\n                    if (next.type === 'word' && next.value[0] === '!') {\n                        node.value = '';\n                    }\n                }\n                if (node.type === 'word' && node.value === '!' && parent.nodes[index + 2] && next.type === 'space' && parent.nodes[index + 2].type === 'word') {\n                    next.type = 'word';\n                    next.value = '';\n                }\n                if (node.type === 'word') {\n                    (0, _applyTransformFeatures2.default)(node, opts);\n                }\n            });\n\n            rule.value = ast.toString();\n\n            if ((0, _isSassVariable2.default)(rule)) {\n                rule.raws.before = '';\n            }\n\n            // Format `!important`\n            if (rule.important) {\n                rule.raws.important = '!important';\n            }\n\n            if (raws.value) {\n                rule.raws.value.raw = rule.value;\n            }\n        }\n    });\n    // Remove final newline\n    css.raws.after = '';\n}\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}